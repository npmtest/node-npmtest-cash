{"/home/travis/build/npmtest/node-npmtest-cash/test.js":"/* istanbul instrument in package npmtest_cash */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cash/lib.npmtest_cash.js":"/* istanbul instrument in package npmtest_cash */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cash = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cash = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cash/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cash && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cash */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cash\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cash.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_cash.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cash.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_cash.__dirname +\n                    '/lib.npmtest_cash.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/index.js":"'use strict';\n\nvar os = require('os');\nvar Vorpal = require('vorpal');\n\nvar commands = require('./../commands.json');\nvar help = require('./help');\nvar interfacer = require('./util/interfacer');\nvar delimiter = require('./delimiter.js');\nvar path = require('path');\nvar fs = require('fs');\n\nvar cmds = undefined;\n\nvar app = {\n\n  commands: commands.commands,\n\n  importedCommands: commands.importedCommands,\n\n  vorpal: new Vorpal(),\n\n  _cwd: process.cwd(),\n\n  _fatal: false,\n\n  export: function _export(str, cbk) {\n    // Is this a tagged template literal?\n    var tmpl = Array.isArray(str) && Array.isArray(str.raw);\n    cbk = tmpl && cbk || function () {};\n    var options = {\n      fatal: app._fatal || false\n    };\n    // Hook stdin, execute the command and\n    // then return it all.\n    var intercept = require('./util/intercept');\n    var out = '';\n    var unhook = intercept(function (str) {\n      out += str + '\\n';\n      return '';\n    });\n    var commands = undefined;\n    if (tmpl) {\n      // Render into a single string, inserting interpolated values.\n      var interpVals = [].concat(Array.prototype.slice.call(arguments)).slice(1);\n      var interpStr = str[0];\n      for (var i = 0, l = interpVals.length; i < l; i++) {\n        interpStr += '' + interpVals[i] + str[i + 1];\n      }\n      // Split into lines.  Remove blank lines and comments (start with #)\n      commands = interpStr.split(/\\r\\n|\\r|\\n/).filter(function (command) {\n        return !/^\\s*(?:#|$)/.test(command);\n      });\n    } else {\n      commands = [str];\n    }\n    commands.forEach(function (command) {\n      app.vorpal.execSync(command, options);\n    });\n    unhook();\n    return String(out).replace(/\\n$/, '');\n  },\n  load: function load() {\n    var self = this;\n    self.vorpal.api = {};\n    this.commands.forEach(function (cmd) {\n      if (self.importedCommands.indexOf(cmd) > -1) {\n        return;\n      }\n      try {\n        (function () {\n          var mod = require('./commands/' + cmd + '.js');\n          var help = undefined;\n          try {\n            help = require('./help/' + cmd + '.js');\n            help = String(help).replace(/^\\n|\\n$/g, '');\n          } catch (e) {\n            // .. whatever\n          }\n          self.vorpal.use(mod, {\n            parent: self\n          });\n          var cmdObj = self.vorpal.find(cmd);\n          if (cmdObj && help) {\n            /* istanbul ignore next */\n            cmdObj.help(function (args, cb) {\n              cb(help);\n            });\n          }\n        })();\n      } catch (e) {\n        /* istanbul ignore next */\n        self.vorpal.log('Error loading command ' + cmd + ': ', e);\n      }\n    });\n    this.importedCommands.forEach(function (cmd) {\n      try {\n        var mod = require('vorpal-' + cmd);\n        self.vorpal.use(mod, {\n          parent: self\n        });\n      } catch (e) {\n        /* istanbul ignore next */\n        self.vorpal.log('Error loading command ' + cmd + ': ', e);\n      }\n    });\n\n    // If we're running Windows, register\n    // process spawning for Windows child processes.\n    // If on Linux, just does registers the .catch command.\n    var windows = require('./windows');\n    windows.registerCommands(self);\n\n    var _loop = function _loop(cmd) {\n      if (app.vorpal.api.hasOwnProperty(cmd)) {\n        app.export[cmd] = function (args, options, callback) {\n          callback = callback || function () {};\n          options = options || {};\n          options.vorpal = app.vorpal;\n          return interfacer.call(this, {\n            command: app.vorpal.api[cmd],\n            args: args,\n            options: options,\n            callback: callback,\n            async: app.vorpal.api[cmd].async || false,\n            silent: true\n          });\n        };\n      }\n    };\n\n    for (var cmd in app.vorpal.api) {\n      _loop(cmd);\n    }\n\n    app.vorpal.history('cash').localStorage('cash').help(help);\n\n    app.vorpal.find('exit').action(function () {\n      /* istanbul ignore next */\n      process.exit(1);\n    });\n\n    // Load aliases\n    var all = undefined;\n    try {\n      all = JSON.parse(app.vorpal.localStorage.getItem('aliases') || []);\n    } catch (e) {\n      /* istanbul ignore next */\n      all = [];\n      /* istanbul ignore next */\n      app.vorpal.localStorage.removeItem('aliases');\n    }\n    var aliases = {};\n    /* istanbul ignore next */\n    for (var i = 0; i < all.length; ++i) {\n      var item = app.vorpal.localStorage.getItem('alias|' + all[i]);\n      if (item !== undefined && item !== null) {\n        aliases[all[i]] = item;\n      }\n    }\n    app.vorpal._aliases = aliases;\n\n    // Override SIGINT to be ignored,\n    // and if the user is insistent, give\n    // a helpful message. The purpose of this\n    // is to give a full shell feel, not an\n    // application running over the shell.\n    // Skip this on linux, as its mainly\n    // for dev testing.\n    /* istanbul ignore next */\n    if (os.platform().indexOf('win') > -1) {\n      (function () {\n        var counter = 0;\n        setInterval(function () {\n          counter = counter > 0 ? 0 : counter;\n        }, 3000);\n        app.vorpal.sigint(function () {\n          counter++;\n          app.vorpal.ui.submit('');\n          if (counter > 5) {\n            app.vorpal.log('(to quit Cash, use the \"exit\" command)');\n            counter -= 10000;\n          }\n          return;\n        });\n      })();\n    }\n\n    // Load .cashrc upon startup\n    var locations = ['.cashrc'];\n    if (process.platform === 'win32') {\n      /* istanbul ignore next */\n      locations.push('_cashrc');\n    }\n    locations = locations.map(function (str) {\n      return path.join(delimiter.getHomeDir(), str);\n    });\n\n    for (var i = 0; i < locations.length; ++i) {\n      try {\n        if (!fs.statSync(locations[i]).isDirectory()) {\n          app.vorpal.execSync('source ' + locations[i]);\n          break;\n        }\n      } catch (e) {\n        // File doesn't exist, so just don't load defaults\n      }\n    }\n\n    app.export.vorpal = app.vorpal;\n    Object.assign(app.export, cmds);\n    return this;\n  }\n};\n\ncmds = {\n  /* istanbul ignore next */\n\n  show: function show() {\n    /* istanbul ignore next */\n    app.vorpal.show();\n  }\n};\n\napp.load();\n\nmodule.exports = app.export;","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help.js":"'use strict';\n\nvar pad = require('./util/pad');\n\nvar commands = ['alias [-p] [name=[value]]', 'cat [-AbeEnstTv] [files ...]', 'cd [dir]', 'clear', 'cp [-fnr] source ... dest', 'echo [-eE] [arg ...]', 'export [-p][id=[value]]', 'false', 'grep [-bHhinqsvw] [-m max] [--silent] [--include pattern] pattern [files ...]', 'head [-nqv] <files ...>', 'kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l', 'less [files ...]', 'ls [-aAdFhilQrRStUwx1] [paths ...]', 'mkdir [-pv] [directories ...]', 'mv [-fnv] source ... dest', 'pwd [files ...]', 'rm [-frR] [files ...]', 'sort [-chMnrR] [-o file] [files ...]', 'source filename [arguments...]', 'tail [options] <files ...>', 'touch [-acm] [-d date] [-r ref] [--time word] file ...', 'true', 'unalias [-a] name [names ...]'];\n\nfunction chop(str, len) {\n  var res = String(str).slice(0, len - 2);\n  res = res.length === len - 2 ? res + '>' : res;\n  return res;\n}\n\nmodule.exports = function () {\n  var version = require('./../package.json').version;\n  var result = '';\n\n  result += 'Cash, version ' + version + '\\n';\n  result += 'These shell commands are defined internally.  Type `help\\' to see this list.\\n';\n  result += 'Type `help name\\' to find out more about the function `name\\'.\\n';\n  result += 'Use `info cash\\' to find out more about the shell in general.\\n';\n  result += '\\n';\n\n  var half = Math.floor(commands.length / 2);\n  var width = Math.floor((process.stdout.columns - 3) / 2);\n  var lhalf = Math.ceil(commands.length / 2);\n  var padding = commands.length % 2 === 1 ? 1 : 0;\n  for (var i = 0; i < lhalf; ++i) {\n    var colA = pad(chop(commands[i], width), width);\n    var colB = pad(chop(commands[half + i + padding] || '', width), width);\n    var line = i === lhalf - 1 ? '' : '\\n';\n    result += ' ' + colA + ' ' + colB + line;\n  }\n\n  return result;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/pad.js":"'use strict';\n\nvar strip = require('./stripAnsi');\n\n/**\n * Pads a value with with space or\n * a specified delimiter to match a\n * given width.\n *\n * @param {String} str\n * @param {Integer} width\n * @param {String} delimiter\n * @return {String}\n * @api public\n */\n\nmodule.exports = function (str, width, delimiter) {\n  width = Math.floor(width);\n  delimiter = delimiter || ' ';\n  var len = Math.max(0, width - strip(str).length);\n  return str + Array(len + 1).join(delimiter);\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/stripAnsi.js":"'use strict';\n\n/**\n * Removes all ansi characters.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function (str) {\n  var ansiRegex = /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n  return typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/interfacer.js":"'use strict';\n\n/**\n * Simple binding interface between\n * each command's function and the caller\n * of the command, whether by `cash.command`\n * or by being invoked by Vorpal.\n * This exists to abstract complexity\n * and create a standard in interfacing\n * commands acorss muliple execution paths.\n *\n * @param {Object} opt\n * @api public\n */\n\nmodule.exports = function (opt) {\n  var self = this;\n  var stdout = '';\n  opt.options = opt.options || {};\n  opt.callback = opt.callback || function () {};\n  opt.command = opt.command || {\n    exec: function exec() {}\n  };\n\n  var logger = {\n    log: function log(out) {\n      stdout += out + '\\n';\n      if (opt.silent !== true) {\n        // process.stdout.write(out) // to do - handle newline problem.\n        self.log(out);\n      }\n    }\n  };\n\n  function onResult(result) {\n    result = result === undefined ? 0 : result;\n    opt.callback(null, stdout);\n    return stdout;\n  }\n\n  if (opt.async === true) {\n    return opt.command.exec.call(logger, opt.args, opt.options, onResult);\n  }\n  return onResult(opt.command.exec.call(logger, opt.args, opt.options));\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/delimiter.js":"'use strict';\n\nvar os = require('os');\nvar username = require('username');\nvar userHome = require('user-home');\n\nvar isWindows = process.platform === 'win32';\nvar pathConverter = require('./util/converter.path');\n\nmodule.exports = {\n  refresh: function refresh(vorpal, cb) {\n    cb = cb || function () {};\n    username(function (err, username) {\n      if (!err) {\n        var user = username;\n        var host = String(os.hostname()).split('.')[0];\n        var home = pathConverter.unix(userHome);\n        var cwd = pathConverter.unix(process.cwd());\n        cwd = cwd.replace(home, '~');\n        var delimiter = user + '@' + host + ':' + cwd + '$';\n        // If we're on linux-based systems, color\n        // the prompt so we don't get confused.\n        if (!isWindows) {\n          delimiter = '\\u001b[32m' + delimiter + '\\u001b[39m';\n        }\n        vorpal.delimiter(delimiter);\n      }\n      cb(err);\n    });\n  },\n  getHomeDir: function getHomeDir() {\n    return userHome;\n  }\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/converter.path.js":"'use strict';\n\nvar path = require('path');\n\n/**\n * Path conversion utilities\n */\n\nmodule.exports = {\n  unix: function unix(str) {\n    var input = path.normalize(str);\n    input = input.replace(/\\\\/g, '\\/');\n    var parts = input.split(':');\n    var drive = parts.shift();\n    var isLetter = drive.length === 1 && drive.match(/[a-z]/i);\n    var result = isLetter ? drive + parts.join(':') : input;\n    return result;\n  }\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/alias.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar alias = {\n  exec: function exec(args, options) {\n    args = args || [];\n    options = options || {};\n    var vorpal = options.vorpal;\n\n    if (!vorpal) {\n      throw new Error('Alias is not programatically supported.');\n    }\n\n    vorpal._aliases = vorpal._aliases || [];\n\n    if (args.length < 1) {\n      options.p = true;\n    }\n\n    if (typeof args === 'string' || args instanceof String) {\n      args = [args];\n    }\n\n    // Parse incoming args. Accept either:\n    // alias foo=bar, or\n    // alias foo 'bar and so on'.\n    var key = args.join(' ');\n    var value = undefined;\n    if (String(key).indexOf('=') > -1) {\n      var parts = String(key).trim().split('=');\n      key = parts[0];\n      value = parts[1] || value;\n    } else {\n      var parts = String(key).trim().split(' ');\n      key = parts.shift();\n      value = parts.join(' ');\n    }\n\n    // Remove wrapped quotes from value.\n    if (value !== undefined) {\n      value = String(value).replace(/^[\\\"|\\']|[\\\"|\\']$/g, '');\n    }\n\n    // Pull list of aliases\n    var all = undefined;\n    try {\n      all = JSON.parse(vorpal.localStorage.getItem('aliases') || []);\n    } catch (e) {\n      all = [];\n      vorpal.localStorage.removeItem('aliases');\n    }\n\n    if (options.p) {\n      for (var i = 0; i < all.length; ++i) {\n        var item = vorpal.localStorage.getItem('alias|' + all[i]);\n        if (item !== undefined && item !== null) {\n          this.log('alias ' + all[i] + '=\\'' + item + '\\'');\n        }\n      }\n    } else {\n      if (value) {\n        vorpal.localStorage.setItem('alias|' + key, value);\n        all = all.filter(function (val) {\n          return val !== key;\n        });\n        all.push(key);\n      } else {\n        var item = vorpal.localStorage.getItem('alias|' + key);\n        if (item !== undefined && item !== null) {\n          this.log('alias ' + key + '=\\'' + item + '\\'');\n        } else {\n          this.log('-cash: alias: ' + key + ': not found');\n        }\n      }\n\n      var aliases = {};\n      for (var i = 0; i < all.length; ++i) {\n        var item = vorpal.localStorage.getItem('alias|' + all[i]);\n        if (item !== undefined && item !== null) {\n          aliases[all[i]] = item;\n        }\n      }\n      vorpal._aliases = aliases;\n    }\n\n    vorpal.localStorage.setItem('aliases', JSON.stringify(all));\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return alias;\n  }\n  vorpal.api.alias = alias;\n  vorpal.command('alias [name...]').parse(preparser).option('-p', 'print all defined aliases in a reusable format').action(function (args, callback) {\n    args.options = args.options || {};\n    args.options.vorpal = vorpal;\n    return interfacer.call(this, {\n      command: alias,\n      args: args.name,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/preparser.js":"'use strict';\n\n// Replace out env variables.\n\nvar parseEnvVariables = function parseEnvVariables(input) {\n  var referenceRegex = /\\${([a-zA-Z_][a-zA-Z0-9_]*)}|\\$([a-zA-Z_][a-zA-Z0-9_]*)/g;\n\n  return input.replace(referenceRegex, function (varRef, capture1, capture2, capture3) {\n    var varName = capture1 || capture2 || capture3;\n    // Return the value of the variable, or the empty string if not there\n    return process.env.hasOwnProperty(varName) ? process.env[varName] : '';\n  });\n};\n\nvar preparser = function preparser(input) {\n  input = parseEnvVariables(input);\n  return input;\n};\n\nmodule.exports = preparser;","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/alias.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: alias [OPTION] [name[=value] ...]\\nDefine or display aliases.\\n\\nWithout arguments, `alias' prints the list of aliases in the reusable\\nform `alias NAME=VALUE' on standard output.\\n\\nOtherwise, an alias is defined for each NAME whose VALUE is given.\\nA trailing space in VALUE causes the next word to be checked for\\nalias substitution when the alias is expanded.\\n\\n  -p           print all defined aliases in a reusable format\\n      --help   display this help and exit\\n\\nReport alias bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/cat.js":"'use strict';\n\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar fetch = require('./../util/fetch');\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\nvar lpad = require('./../util/lpad');\nvar strip = require('./../util/stripAnsi');\n\nvar cat = {\n  exec: function exec(args, options) {\n    var self = this;\n\n    // Input normalization\n    if (args === undefined) {\n      args = {\n        files: []\n      };\n    } else if (typeof args === 'string' || args instanceof String) {\n      args = {\n        files: [args]\n      };\n    } else if (Array.isArray(args)) {\n      args = {\n        files: args\n      };\n    }\n\n    options = options || {};\n\n    // -A handler\n    if (options.showall) {\n      options.shownonprinting = true;\n      options.showends = true;\n      options.showtabs = true;\n    }\n\n    // -e handler\n    if (options.e) {\n      options.shownonprinting = true;\n      options.showends = true;\n    }\n\n    // -t handler\n    if (options.t) {\n      options.shownonprinting = true;\n      options.showtabs = true;\n    }\n\n    var stdout = '';\n    try {\n      var stdin = fetch(args.files, args.stdin, {\n        onDirectory: function onDirectory(name) {\n          return 'cat: ' + name + ': Is a directory';\n        },\n        onInvalidFile: function onInvalidFile(name) {\n          return 'cat: ' + name + ': No such file or directory';\n        }\n      });\n      var ctr = 0;\n      for (var i = 0; i < stdin.length; ++i) {\n        // If -s, squeeze double blank lines to a\n        // single line.\n        if (options.squeezeblank) {\n          stdin[i] = stdin[i].replace(/\\n\\n\\s*\\n/g, '\\n\\n');\n        }\n        if (options.showtabs) {\n          stdin[i] = stdin[i].replace(/\\t/g, '^I');\n        }\n        // Get rid of trailing line break because\n        // node logging does it anyway.\n        stdin[i] = stdin[i].replace(/\\s$/, '');\n        var parts = String(stdin[i]).split('\\n');\n        for (var j = 0; j < parts.length; ++j) {\n          var blank = strip(parts[j]).trim() === '';\n          // If -b, number every non-blank line\n          // If -n, number every line\n          var numbered = !blank && options.numbernonblank || options.number && !options.numbernonblank;\n          if (numbered) {\n            ctr++;\n          }\n          var numStr = numbered ? lpad(String(ctr), 6, ' ') + '  ' : '';\n          // If -E, append a $ to each line end.\n          var dollarStr = options.showends ? '$' : '';\n          var line = numStr + parts[j] + dollarStr;\n          stdout += line + '\\n';\n        }\n      }\n\n      if (stdout.length > 0) {\n        self.log(stdout.slice(0, stdout.length - 1));\n      }\n\n      return 0;\n    } catch (e) {\n      /* istanbul ignore next */\n      self.log(e.stack);\n      /* istanbul ignore next */\n      return 1;\n    }\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return cat;\n  }\n  vorpal.api.cat = cat;\n  vorpal.command('cat [files...]').parse(preparser).option('-A, --show-all', 'equivalent to -vET').option('-b, --number-nonblank', 'number nonempty output lines, overrides -n').option('-e', 'equivalent to -vE').option('-E, --show-ends', 'display $ at end of each line').option('-n, --number', 'number all output lines').option('-s, --squeeze-blank', 'suppress repeated empty output lines').option('-t', 'equivalent to -vT').option('-T, --show-tabs', 'display TAB characters as ^I').option('-v, --show-nonprinting', 'use ^ and M- notation, except for LFD and TAB') // this doesn't work yet...\n  .autocomplete(fsAutocomplete()).action(function (args, cb) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: cat,\n      args: args,\n      options: args.options,\n      callback: cb\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/fetch.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar expand = require('./expand');\n\n/**\n * Reads the contents of an array of\n * files and returns the array.\n *\n * @param {Array} files\n * @param {String} stdin\n * @param {Object} options\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function (files, stdin, options) {\n  files = files || [];\n  stdin = stdin !== undefined ? stdin : [];\n  var f = expand(files);\n\n  if (!(f.length === 0 && files.length > 0)) {\n    files = f;\n  }\n\n  for (var i = 0; i < files.length; ++i) {\n    try {\n      var stat = fs.statSync(files[i]);\n      if (stat.isDirectory()) {\n        files[i] = options.onDirectory(files[i]);\n      } else {\n        files[i] = String(fs.readFileSync(path.normalize(files[i]), 'utf8'));\n      }\n    } catch (e) {\n      files[i] = options.onInvalidFile(files[i]);\n    }\n  }\n\n  var agg = files.length < 1 ? stdin : files;\n  var final = [];\n\n  for (var i = 0; i < agg.length; ++i) {\n    if (agg[i] !== undefined) {\n      final.push(agg[i]);\n    }\n  }\n  return final;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/expand.js":"'use strict';\n\nvar glob = require('glob');\n\n/**\n * Expands wildcard files, etc. out\n * into their full paths.\n *\n * @param {Array} list\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function (list) {\n  var total = list.length;\n  var files = [];\n  if (list.length < 1) {\n    return [];\n  }\n  for (var i = 0; i < total; ++i) {\n    var res = glob.sync(list[i], {});\n    files[i] = res.length > 0 ? res : list[i];\n  }\n  var out = [];\n  for (var i = 0; i < files.length; ++i) {\n    out = Array.isArray(files[i]) ? out.concat(files[i]) : out.concat([files[i]]);\n  }\n  return out;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/lpad.js":"'use strict';\n\nvar strip = require('./stripAnsi');\n\n/**\n * Pads to the left hand.\n *\n * @param {String} str\n * @param {Integer} width\n * @param {String} delimiter\n * @return {String}\n * @api public\n */\n\nmodule.exports = function (str, width, delimiter) {\n  width = Math.floor(width);\n  delimiter = delimiter || ' ';\n  var len = Math.max(0, width - strip(str).length);\n  return Array(len + 1).join(delimiter) + str;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/cat.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: cat [OPTION]... [FILE]...\\nConcatenate FILE(s), or standard input, to standard output.\\n\\n  -A, --show-all           equivalent to -vET\\n  -b, --number-nonblank    number nonempty output lines, overrides -n\\n  -e                       equivalent to -vE\\n  -E, --show-ends          display $ at end of each line\\n  -n, --number             number all output lines\\n  -s, --squeeze-blank      suppress repeated empty output lines\\n  -t                       equivalent to -vT\\n  -T, --show-tabs          display TAB characters as ^I\\n  -v, --show-nonprinting   use ^ and M- notation, except for LFD and TAB\\n      --help               display this help and exit\\n\\nWith no FILE, or when FILE is -, read standard input.\\n\\nExamples:\\n  cat f - g  Output f's contents, then standard input, then g's contents.\\n  cat        Copy standard input to standard output.\\n\\nReport cat bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/cd.js":"'use strict';\n\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\nvar delimiter = require('./../delimiter');\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar cd = {\n  exec: function exec(dir, options) {\n    var self = this;\n    var vpl = options.vorpal;\n    options = options || {};\n\n    dir = !dir ? delimiter.getHomeDir() : dir;\n\n    // Allow Windows drive letter changes\n    dir = dir && dir.length === 2 && dir[1] === '/' ? dir[0] + ':' : dir;\n\n    try {\n      process.chdir(dir);\n      if (vpl) {\n        delimiter.refresh(vpl);\n      }\n      return 0;\n    } catch (e) {\n      return cd.error.call(self, e, dir);\n    }\n  },\n  error: function error(e, dir) {\n    var status = undefined;\n    var stdout = undefined;\n    if (e.code === 'ENOENT' && e.syscall === 'uv_chdir') {\n      status = 1;\n      stdout = '-bash: cd: ' + dir + ': No such file or directory';\n    } else {\n      status = 2;\n      stdout = e.stack;\n    }\n    this.log(stdout);\n    return status;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return cd;\n  }\n  vorpal.api.cd = cd;\n  vorpal.command('cd [dir]').parse(preparser).autocomplete(fsAutocomplete({ directory: true })).action(function (args, callback) {\n    args.options = args.options || {};\n    args.options.vorpal = vorpal;\n    return interfacer.call(this, {\n      command: cd,\n      args: args.dir,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/cd.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: cd [DIR]...\\nChange the cash working directory.\\n\\nChange the current directory to DIR.  The default DIR is the value of the\\nHOME shell variable.\\n\\nReport cd bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/clear.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\n\nvar clear = {\n  exec: function exec() {\n    this.log('\\u001b[2J\\u001b[0;0H');\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return clear;\n  }\n  vorpal.api.clear = clear;\n  vorpal.command('clear').action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: clear,\n      args: args,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/clear.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: clear\\nClear the terminal screen\\n\\n      --help        display this help and exit\\n\\nClear ignores any command-line parameters that may be present.\\n\\nReport clear bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/cp.js":"'use strict';\n\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\nvar path = require('path');\nvar os = require('os');\n\nvar expand = require('./../util/expand');\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar cp = {\n  exec: function exec(args, options) {\n    var self = this;\n    options = options || {};\n\n    args = args === undefined ? [] : args;\n    args = Array.isArray(args) ? args : args.split(' ');\n    args = args.filter(function (arg) {\n      return String(arg).trim() !== '';\n    });\n\n    options.noclobber = options.force === true ? false : options.noclobber;\n    options.recursive = options.R === true ? true : options.recursive;\n\n    if (args.length < 1) {\n      this.log('cp: missing file operand\\nTry \\'cp --help\\' for more information.');\n      return 1;\n    }\n\n    if (args.length === 1) {\n      this.log('cp: missing destination file operand after ' + args[0] + '\\nTry \\'cp --help\\' for more information.');\n      return 1;\n    }\n\n    args = expand(args);\n\n    var dest = args.pop();\n    var sources = args;\n\n    var exists = fs.existsSync(dest);\n    var stats = exists && fs.statSync(dest);\n\n    // Dest is not existing dir, but multiple sources given\n    if ((!exists || !stats.isDirectory()) && sources.length > 1) {\n      this.log('cp: target ' + dest + ' is not a directory');\n      return 1;\n    }\n\n    // Dest is an existing file, but no -f given\n    if (exists && stats.isFile() && options.noclobber) {\n      // just dont do anything\n      return 0;\n    }\n\n    if (options.recursive) {\n      sources.forEach(function (src, i) {\n        if (src[src.length - 1] === '/') {\n          sources[i] += '*';\n        } else if (fs.statSync(src).isDirectory() && !exists) {\n          sources[i] += '/*';\n        }\n      });\n      try {\n        fs.mkdirSync(dest, parseInt('0777', 8));\n      } catch (e) {\n        // like Unix's cp, keep going even if we can't create dest dir\n      }\n    }\n\n    sources = expand(sources);\n\n    sources.forEach(function (src) {\n      if (!fs.existsSync(src)) {\n        self.log('cp: cannot stat ' + src + ': No such file or directory');\n        return;\n      }\n\n      if (fs.statSync(src).isDirectory()) {\n        if (!options.recursive) {\n          self.log('cp: omitting directory ' + src);\n        } else {\n          // 'cp /a/source dest' should create 'source' in 'dest'\n          var newDest = path.join(dest, path.basename(src));\n          var checkDir = fs.statSync(src);\n          try {\n            fs.mkdirSync(newDest, checkDir.mode);\n          } catch (e) {\n            /* istanbul ignore if */\n            if (e.code !== 'EEXIST') {\n              throw new Error();\n            }\n          }\n          cpdirSyncRecursive.call(self, src, newDest, options);\n        }\n        return;\n      }\n\n      // If here, src is a file\n      // When copying to '/path/dir', iDest = '/path/dir/file1'\n      var iDest = dest;\n      if (fs.existsSync(dest) && fs.statSync(dest).isDirectory()) {\n        iDest = path.normalize(dest + '/' + path.basename(src));\n      }\n\n      if (fs.existsSync(iDest) && options.no_force) {\n        return;\n      }\n\n      copyFileSync.call(self, src, iDest);\n    });\n  }\n};\n\nfunction cpdirSyncRecursive(sourceDir, destDir, options) {\n  var self = this;\n  /* istanbul ignore if */\n  if (!options) {\n    options = {};\n  }\n  var checkDir = fs.statSync(sourceDir);\n  try {\n    fs.mkdirSync(destDir, checkDir.mode);\n  } catch (e) {\n    /* istanbul ignore if */\n    if (e.code !== 'EEXIST') {\n      throw e;\n    }\n  }\n  var files = fs.readdirSync(sourceDir);\n  for (var i = 0; i < files.length; i++) {\n    var srcFile = sourceDir + '/' + files[i];\n    var destFile = destDir + '/' + files[i];\n    var srcFileStat = fs.lstatSync(srcFile);\n    if (srcFileStat.isDirectory()) {\n      // recursion this thing right on back.\n      cpdirSyncRecursive.call(self, srcFile, destFile, options);\n    } else if (srcFileStat.isSymbolicLink()) {\n      var symlinkFull = fs.readlinkSync(srcFile);\n      fs.symlinkSync(symlinkFull, destFile, os.platform() === 'win32' ? 'junction' : null);\n      // At this point, we've hit a file actually worth copying... so copy it on over.\n    } else if (fs.existsSync(destFile) && options.noclobber) {\n        // be silent\n      } else {\n          copyFileSync.call(self, srcFile, destFile);\n        }\n  }\n}\n\nfunction copyFileSync(src, dest) {\n  /* istanbul ignore if */\n  if (!fs.existsSync(src)) {\n    this.log('cp: cannot stat ' + src + ': No such file or directory');\n    return;\n  }\n\n  var BUF_LENGTH = 64 * 1024;\n  var buf = new Buffer(BUF_LENGTH);\n  var bytesRead = BUF_LENGTH;\n  var pos = 0;\n  var fdr = null;\n  var fdw = null;\n\n  try {\n    fdr = fs.openSync(src, 'r');\n  } catch (e) {\n    /* istanbul ignore next */\n    this.log('cp: cannot open ' + src + ': ' + e.code);\n    /* istanbul ignore next */\n    return;\n  }\n\n  try {\n    fdw = fs.openSync(dest, 'w');\n  } catch (e) {\n    /* istanbul ignore next */\n    this.log('cp: cannot write to destination file ' + dest + ': ' + e.code);\n    /* istanbul ignore next */\n    return;\n  }\n\n  while (bytesRead === BUF_LENGTH) {\n    bytesRead = fs.readSync(fdr, buf, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, buf, 0, bytesRead);\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n  fs.chmodSync(dest, fs.statSync(src).mode);\n}\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return cp;\n  }\n  vorpal.api.cp = cp;\n  vorpal.command('cp [args...]').parse(preparser).option('-f, --force', 'do not prompt before overwriting').option('-n, --no-clobber', 'do not overwrite an existing file').option('-r, --recursive', 'copy directories recursively').option('-R', 'copy directories recursively').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: cp,\n      args: args.args,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/cp.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: cp [OPTION]... [-T] SOURCE DEST\\n  or:  cp [OPTION]... SOURCE... DIRECTORY\\nCopy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\\n\\n  -f, --force           if an existing destination file cannot be\\n                          opened, remove it and try again (this option\\n                          is ignored when the -n option is also used)\\n  -n, --no-clobber      do not overwrite an existing file (overrides\\n                          a previous -i option)\\n  -R, -r, --recursive   copy directories recursively\\n      --help            display this help and exit\\n\\nReport cp bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/echo.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar echo = {\n  exec: function exec(arg, options) {\n    var self = this;\n    options = options || {};\n\n    try {\n      var text = arg || '';\n      text = !Array.isArray(text) ? [text] : text;\n      var result = text.join(' ');\n      var out = '';\n      if (options.e && !options.E) {\n        for (var i = 0; i < result.length; ++i) {\n          var nxt = result[i] + (result[i + 1] || '');\n          if (nxt === '\\\\b') {\n            out = out.slice(0, out.length - 1);\n            i++;\n          } else if (nxt === '\\\\c') {\n            break;\n          } else if (nxt === '\\\\n') {\n            out += '\\n';\n            i++;\n          } else if (nxt === '\\\\r') {\n            out += '\\r';\n            i++;\n          } else if (nxt === '\\\\t') {\n            out += '     ';\n            i++;\n          } else if (nxt === '\\\\\\\\') {\n            out += '\\\\';\n            i += 2;\n          } else {\n            out += result[i];\n          }\n        }\n        result = out;\n      }\n\n      // Bug: If nothing is passed, ensure we keep\n      // a blank line. Vorpal is designed to just\n      // eat blank lines, so we have a problem.\n      result = result === '' ? '' : result;\n\n      this.log(result);\n      return 0;\n    } catch (e) {\n      /* istanbul ignore next */\n      return echo.error.call(self, e);\n    }\n  },\n  error: function error(e) {\n    /* istanbul ignore next */\n    this.log(e.stack);\n    /* istanbul ignore next */\n    return 2;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return echo;\n  }\n  vorpal.api.echo = echo;\n  vorpal.command('echo [arg...]').parse(preparser).option('-e', 'enable interpretation of the following backslash escapes').option('-E', 'explicitly suppress interpretation of backslash escapes').action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: echo,\n      args: args.arg,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/echo.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: echo [OPTION]... [ARG ...]\\nWrite arguments to the standard output.\\n\\nDisplay the ARGs, separated by a single space character and followed by a\\nnewline, on the standard output.\\n\\n  -e           enable interpretation of the following backslash escapes\\n  -e           explicitly suppress interpretation of backslash escapes\\n      --help   display this help and exit\\n\\n  `echo' interprets the following backslash-escaped characters:\\n    \\b         backspace\\n    c         suppress further output\\n    \\n         new line\\n    \\r         carriage return\\n    \\t         horizontal tab\\n    \\\\         backslash\\n\\nReport echo bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/head.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar interfacer = require('./../util/interfacer');\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar expand = require('./../util/expand');\n\nvar head = {\n  exec: function exec(args, options) {\n    options = options || {};\n    args = args || '';\n    var source = args.stdin === undefined ? 'files' : 'stdin';\n\n    var lines = options.lines ? Math.abs(options.lines) : 10;\n    if (!Number.isInteger(lines)) {\n      this.log('head: ' + options.lines + ': invalid number of lines');\n      return 0;\n    }\n\n    /* istanbul ignore next */\n    if (source === 'stdin') {\n      var _stdout = head.readLines(args.stdin[0], lines);\n      _stdout = _stdout.replace(/\\n$/, '');\n      if (_stdout.trim() !== '') {\n        this.log(_stdout);\n      }\n      return 0;\n    }\n\n    var files = args.files || args;\n    files = (typeof files === 'undefined' ? 'undefined' : _typeof(files)) === 'object' && files !== null && !Array.isArray(files) ? [] : files;\n    files = files === undefined ? [] : files;\n    files = typeof files === 'string' ? String(files).split(' ') : files;\n    files = files.filter(function (arg) {\n      return String(arg).trim() !== '';\n    });\n    files = expand(files);\n\n    var stdout = '';\n    var verbose = files.length > 1 && !options.silent || options.verbose;\n\n    for (var i = 0; i < files.length; i++) {\n      try {\n        var content = fs.readFileSync(files[i]).toString();\n        if (verbose) {\n          stdout += (i > 0 ? '\\n' : '') + '==> ' + files[i] + ' <==\\n';\n        }\n        stdout += head.readLines(content, lines);\n      } catch (e) {\n        stdout += 'head: cannot open ' + files[i] + ' for reading: No such file or directory';\n      }\n    }\n\n    stdout = stdout.replace(/\\n$/, '');\n    if (stdout.trim() !== '') {\n      this.log(stdout);\n    }\n\n    return 0;\n  },\n  readLines: function readLines(content, numberOfLines) {\n    var stdout = '';\n    var contentArray = content.split('\\n');\n    var linesToRead = numberOfLines >= contentArray.length ? contentArray.length : numberOfLines;\n    for (var i = 0; i < linesToRead; i++) {\n      if (stdout === '') {\n        stdout = contentArray[i] + '\\n';\n        continue;\n      }\n      stdout += contentArray[i] + '\\n';\n    }\n    return stdout;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return head;\n  }\n  vorpal.api.head = head;\n  vorpal.command('head [files...]').option('-n, --lines [number]', 'print the first K lines instead of the first 10').option('-q, --silent', 'Suppresses printing of headers when multiple files are being examined.').option('-v, --verbose', 'Always output headers giving file names.').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: head,\n      args: args,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/head.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: head [OPTION]... [FILE]...\\nPrint the first 10 lines of each FILE to standard output.\\nWith more than one FILE, precede each with a header giving the file name.\\nWith no FILE, or when FILE is -, read standard input.\\n\\n  -n, --lines <number>        output the last N lines, instead of the last 10\\n  -q, --silent                suppresses printing of headers when multiple files\\n                                are being examined\\n  -v, --verbose               always output headers giving file names\\n      --help                  display this help and exit\\n\\nReport head bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/export.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar _export = {\n  exec: function exec(args, options) {\n    args = args || [];\n    options = options || {};\n\n    if (args.length < 1) {\n      options.p = true;\n    }\n\n    if (typeof args === 'string' || args instanceof String) {\n      args = [args];\n    }\n\n    // Parse similarly to how `alias` does\n    var id = args.join(' ');\n    var value = '';\n    if (String(id).indexOf('=') > -1) {\n      var parts = String(id).trim().split('=');\n      id = parts[0];\n      value = parts[1] || value;\n      if (value.match(/^\".*\"$/)) {\n        value = JSON.parse(value);\n      } else {\n        var regMatch = value.match(/^'(.*)'$/);\n        if (regMatch && regMatch[1]) {\n          value = regMatch[1];\n        }\n      }\n    } else {\n      var parts = String(id).trim().split(' ');\n      id = parts.shift();\n      value = parts.join(' ') || null;\n    }\n\n    var validIdRegex = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n    if (options.p) {\n      for (var name in process.env) {\n        if (process.env.hasOwnProperty(name)) {\n          this.log('declare -x ' + String(name) + '=' + JSON.stringify(process.env[name]).replace(/\\$/g, '\\\\$'));\n        }\n      }\n    } else if (id.match(validIdRegex)) {\n      process.env[id] = value !== null ? value : process.env[id];\n    } else {\n      this.log('-cash: export: `' + id + '\\': not a valid identifier');\n      return 1;\n    }\n\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return _export;\n  }\n  vorpal.api.export = _export;\n  vorpal.command('export [name...]').parse(preparser).option('-p', 'print all defined aliases in a reusable format').action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: _export,\n      args: args.name,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/export.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: export [OPTION] [name[=value]]\\nExport variables into the environment\\n\\nWithout arguments, `export' prints the list of environnmental variables in the\\nform `declare -x NAME=\\\"VALUE\\\"' on standard output. This is the same as the\\nbehavior if `-p' is given.\\n\\nOtherwise, the variable is exported to the environment. If the variable has\\nalready been defined in the environment (ex. `PATH'), then this will either\\nredefine its value or do nothing (if no value is passed in). If the variable is\\nnot already in the environment, it will be added with the `VALUE' given\\n(defaults to the empty string).\\n\\n  -p           print all exported variables in a reusable format\\n      --help   display this help and exit\\n\\nReport export bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/false.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\n\nvar _false = {\n  exec: function exec() {\n    // Always return 1\n    return 1;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return _false;\n  }\n  vorpal.api.false = _false;\n  vorpal.command('false').action(function (args, callback) {\n    return interfacer.call(this, {\n      command: _false,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/false.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: false [OPTION]\\nDo nothing, unsuccessfully\\n\\nThis command simply exits with status 1 (failure).\\n\\n      --help   display this help and exit\\n\\nReport false bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/kill.js":"'use strict';\n\nvar fkill = require('fkill');\nvar os = require('os');\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar usage = 'kill: usage: kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]';\nvar windows = os.platform().indexOf('win') > -1;\nvar signals = {\n  SIGKILL: 9,\n  SIGTERM: 15,\n  KILL: 9,\n  TERM: 15,\n  9: 'KILL',\n  15: 'TERM'\n};\n\nvar kill = {\n  exec: function exec(args, options) {\n    options = options || {};\n\n    var procs = args;\n    procs = procs === undefined ? [] : procs;\n    procs = typeof procs === 'string' ? String(procs).split(' ') : procs;\n    procs = procs.filter(function (arg) {\n      return String(arg).trim() !== '';\n    });\n\n    function log(str) {\n      if (options.vorpal) {\n        options.vorpal.log(str);\n      } else {\n        /* istanbul ignore next */\n        console.log(str);\n      }\n    }\n\n    if (options.l !== undefined) {\n      if (options.l === true) {\n        this.log(' 9) SIGKILL   15) SIGTERM');\n        return 0;\n      }\n      if (signals[options.l]) {\n        this.log(signals[options.l]);\n        return 0;\n      }\n      this.log('-cash: kill: ' + options.l + ': invalid signal specification');\n      return 0;\n    }\n\n    if (procs.length < 1) {\n      this.log(usage);\n      return 0;\n    }\n\n    var forced = options['9'] === true || options.n === 9 || String(options.s).toLowerCase() === 'sigkill' || String(options.s).toLowerCase() === 'kill';\n    var opts = { force: forced };\n\n    var _loop = function _loop(i) {\n      var proc = procs[i];\n      proc = !isNaN(proc) ? parseFloat(proc) : proc;\n      proc = windows && isNaN(proc) && proc.indexOf('.') === -1 ? proc + '.exe' : proc;\n      fkill(proc, opts).then(function () {\n        // .. chill\n      }).catch(function (err) {\n        if (String(err.message).indexOf('failed') > -1) {\n          log('-cash: kill: (' + proc + ') - No such process');\n        }\n      });\n    };\n\n    for (var i = 0; i < procs.length; ++i) {\n      _loop(i);\n    }\n\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return kill;\n  }\n  vorpal.api.kill = kill;\n  vorpal.command('kill [process...]').parse(preparser).option('-9', 'sigkill').option('-s [sig]', 'sig is a signal name').option('-n [sig]', 'sig is a signal number').option('-l [sigspec]', 'list the signal names').action(function (args, callback) {\n    args.options = args.options || {};\n    args.options.vorpal = vorpal;\n    return interfacer.call(this, {\n      command: kill,\n      args: args.process,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/kill.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: kill [OPTION] pid | jobspec ... or kill -l [sigspec]\\nSend a signal to a job.\\n\\nSend the processes identified by PID or JOBSPEC the signal named by\\nSIGSPEC or SIGNUM.  If neither SIGSPEC nor SIGNUM is present, then\\nSIGTERM is assumed.\\n\\n  -s sig         SIG is a signal name\\n  -n sig         SIG is a signal number\\n  -l [sigspec]   list the signal names; if arguments follow `-l' they\\n                 are assumed to be signal numbers for which names\\n                 should be listed\\n      --help     display this help and exit\\n\\nExit status:\\n  0   if OK,\\n  1   if an invalid option is given or an error occurs.\\n\\nReport kill bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/ls.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar chalk = require('chalk');\nvar filesize = require('filesize');\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\nvar os = require('os');\n\nvar expand = require('./../util/expand');\nvar colorFile = require('./../util/colorFile');\nvar columnify = require('./../util/columnify');\nvar dateConverter = require('./../util/converter.date');\nvar fileFromPath = require('./../util/fileFromPath');\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\nvar pad = require('./../util/pad');\nvar lpad = require('./../util/lpad');\nvar permissionsConverter = require('./../util/converter.permissions');\nvar strip = require('./../util/stripAnsi');\nvar walkDir = require('./../util/walkDir');\nvar walkDirRecursive = require('./../util/walkDirRecursive');\n\nvar pads = { pad: pad, lpad: lpad };\n\nvar ls = {\n\n  /**\n   * Main command execution.\n   *\n   * @param {Object} args\n   * @return {Object} { status, stdout }\n   * @api public\n   */\n\n  exec: function exec(paths, options) {\n    var self = this;\n    paths = paths !== null && !Array.isArray(paths) && (typeof paths === 'undefined' ? 'undefined' : _typeof(paths)) === 'object' ? paths.paths : paths;\n    paths = paths || ['.'];\n    paths = Array.isArray(paths) ? paths : [paths];\n    paths = expand(paths);\n    options = options || {};\n    try {\n      var results = [];\n      for (var i = 0; i < paths.length; ++i) {\n        if (options.recursive) {\n          var result = ls.execDirRecursive(paths[i], options);\n          results = results.concat(result);\n        } else {\n          var result = ls.execDir(paths[i], options);\n          results.push(result);\n        }\n      }\n      var stdout = ls.formatAll(results, options);\n      if (strip(stdout).trim() !== '') {\n        self.log(String(stdout).replace(/\\\\/g, '/'));\n      }\n      return 0;\n    } catch (e) {\n      /* istanbul ignore next */\n      return ls.error.call(self, e);\n    }\n  },\n\n\n  /**\n   * Returns ls stderr and response codes\n   * for errors.\n   *\n   * @param {Error} e\n   * @return {Object} { status, stdout }\n   * @api private\n   */\n\n  error: function error(e) {\n    /* istanbul ignore next */\n    var status = undefined;\n    /* istanbul ignore next */\n    var stdout = undefined;\n    /* istanbul ignore next */\n    if (e.code === 'ENOENT' && e.syscall === 'scandir') {\n      status = 1;\n      stdout = 'ls: cannot access: No such file or directory';\n    } else {\n      /* istanbul ignore next */\n      status = 2;\n      /* istanbul ignore next */\n      stdout = e.stack;\n    }\n    /* istanbul ignore next */\n    this.log(stdout);\n    /* istanbul ignore next */\n    return status;\n  },\n\n\n  /**\n   * Recursively executes `execDir`.\n   * For use with `ls -R`.\n   *\n   * @param {String} path\n   * @param {Object} options\n   * @return {String} results\n   * @api private\n   */\n\n  execDirRecursive: function execDirRecursive(path, options) {\n    var self = this;\n    var results = [];\n    walkDirRecursive(path, function (pth) {\n      var result = self.execDir(pth, options);\n      results.push(result);\n    });\n    return results;\n  },\n\n\n  /**\n   * Executes `ls` functionality\n   * for a given directory.\n   *\n   * @param {String} path\n   * @param {Object} options\n   * @return {String} results\n   * @api private\n   */\n\n  execDir: function execDir(path, options) {\n    var files = [];\n    var rawFiles = [];\n    var totalSize = 0;\n\n    function pushFile(file, data) {\n      rawFiles.push({\n        file: file,\n        data: data\n      });\n    }\n\n    // Add in implied current and parent dirs.\n    pushFile('.', fs.statSync('.'));\n    pushFile('..', fs.statSync('..'));\n\n    // Walk the passed in directory,\n    // pushing the results into `rawFiles`.\n    walkDir(path, pushFile);\n\n    // Sort alphabetically be default,\n    // unless -U is specified, in which case\n    // we don't sort.\n    if (!options.U) {\n      rawFiles = rawFiles.sort(function (a, b) {\n        // Sort by size.\n        if (options.S) {\n          // Hack for windows - a directory lising\n          // in linux says the size is 4096, and Windows\n          // it's 0, leading to inconsistent sorts based\n          // on size, and failing tests.\n          var win = os.platform() === 'win32';\n          a.data.size = win && a.data.isDirectory() && a.data.size === 0 ? 4096 : a.data.size;\n          b.data.size = win && b.data.isDirectory() && b.data.size === 0 ? 4096 : b.data.size;\n          return a.data.size > b.data.size ? -1 : a.data.size < b.data.size ? 1 : 0;\n        }\n        if (options.t) {\n          // Sort by date modified.\n          return a.data.mtime < b.data.mtime ? 1 : b.data.mtime < a.data.mtime ? -1 : 0;\n        }\n        // Sort alphabetically - default.\n        var aFileName = fileFromPath(a.file).trim().toLowerCase().replace(/\\W/g, '');\n        var bFileName = fileFromPath(b.file).trim().toLowerCase().replace(/\\W/g, '');\n        return aFileName > bFileName ? 1 : aFileName < bFileName ? -1 : 0;\n      });\n    }\n\n    // Reverse whatever sort the user specified.\n    if (options.reverse) {\n      rawFiles.reverse();\n    }\n\n    var _loop = function _loop(i) {\n      var file = rawFiles[i].file;\n      var data = rawFiles[i].data;\n      var fileShort = fileFromPath(file);\n      var dotted = fileShort && fileShort.charAt(0) === '.';\n      var implied = fileShort === '..' || fileShort === '.';\n      var type = data.isDirectory() ? 'd' : '-';\n      var permissions = permissionsConverter.modeToRWX(data.mode);\n      var hardLinks = data.nlink;\n      var size = options.humanreadable ? filesize(data.size, { unix: true }) : data.size;\n      var modified = dateConverter.unix(data.mtime);\n      var owner = data.uid;\n      var group = data.gid;\n      var inode = data.ino;\n\n      totalSize += data.size;\n\n      var fileName = fileShort;\n\n      // If --classify, add '/' to end of folders.\n      fileName = options.classify && data.isDirectory() ? fileName + '/' : fileName;\n\n      // If getting --directory, give full path.\n      fileName = options.directory && file === '.' ? path : fileName;\n\n      // Color the files based on $LS_COLORS\n      fileName = data.isFile() ? colorFile(fileName) : fileName;\n\n      // If not already colored and is executable,\n      // make it green\n      var colored = strip(fileName) !== fileName;\n      if (String(permissions).indexOf('x') > -1 && !colored && data.isFile()) {\n        fileName = chalk.green(fileName);\n      }\n\n      // If --quote-name, wrap in double quotes;\n      fileName = options.quotename ? '\"' + fileName + '\"' : fileName;\n\n      // Make directories cyan.\n      fileName = data.isDirectory() ? chalk.cyan(fileName) : fileName;\n\n      var include = function () {\n        var directory = options.directory;\n        var all = options.all;\n        var almostAll = options.almostall;\n        var result = false;\n        if (directory && file !== '.') {\n          result = false;\n        } else if (!dotted) {\n          result = true;\n        } else if (all) {\n          result = true;\n        } else if (!implied && almostAll) {\n          result = true;\n        } else if (directory && file === '.') {\n          result = true;\n        }\n        return result;\n      }();\n\n      var details = [type + permissions, hardLinks, owner, group, size, modified, fileName];\n\n      if (options.inode) {\n        details.unshift(inode);\n      }\n\n      var result = options.l && !options.x ? details : fileName;\n\n      if (include) {\n        files.push(result);\n      }\n    };\n\n    for (var i = 0; i < rawFiles.length; ++i) {\n      _loop(i);\n    }\n\n    var result = undefined;\n\n    // If we have the detail view, draw out\n    // all of the details of each file.\n    // Otherwise, just throw the file names\n    // into columns.\n    if (Array.isArray(files[0])) {\n      var longest = {};\n      for (var i = 0; i < files.length; ++i) {\n        for (var j = 0; j < files[i].length; ++j) {\n          var len = String(files[i][j]).length;\n          longest[j] = longest[j] || 0;\n          longest[j] = len > longest[j] ? len : longest[j];\n        }\n      }\n\n      var newFiles = [];\n      for (var i = 0; i < files.length; ++i) {\n        var glob = '';\n        for (var j = 0; j < files[i].length; ++j) {\n          var padFn = j === files[i].length - 1 ? 'pad' : 'lpad';\n          if (j === files[i].length - 1) {\n            glob += String(files[i][j]);\n          } else {\n            glob += pads[padFn](String(files[i][j]), longest[j], ' ') + ' ';\n          }\n        }\n        newFiles.push(String(glob));\n      }\n      result = newFiles.join('\\n');\n    } else if (options['1']) {\n      result = files.join('\\n');\n    } else {\n      var opt = {};\n      if (options.width) {\n        opt.width = options.width;\n      }\n      result = columnify(files, opt);\n    }\n\n    return {\n      path: path,\n      size: options.humanreadable ? filesize(totalSize, { unix: true }) : totalSize,\n      results: result\n    };\n  },\n\n\n  /**\n   * Concatenates the results of multiple\n   * `execDir` functions into their proper\n   * form based on options provided.\n   *\n   * @param {String} results\n   * @param {Object} options\n   * @return {String} stdout\n   * @api private\n   */\n\n  formatAll: function formatAll(results, options) {\n    var stdout = '';\n    if (results.length > 1) {\n      for (var i = 0; i < results.length; ++i) {\n        stdout += results[i].path + ':\\n';\n        if (options.l) {\n          stdout += 'total ' + results[i].size + '\\n';\n        }\n        stdout += results[i].results;\n        if (i !== results.length - 1) {\n          stdout += '\\n\\n';\n        }\n      }\n    } else if (results.length === 1) {\n      if (options.l && !options.x) {\n        stdout += 'total ' + results[0].size + '\\n';\n      }\n      stdout += results[0].results;\n    }\n    return stdout;\n  }\n};\n\n/**\n * Expose as a Vorpal extension.\n */\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return ls;\n  }\n  vorpal.api.ls = ls;\n  vorpal.command('ls [paths...]').parse(preparser).option('-a, --all', 'do not ignore entries starting with .').option('-A, --almost-all', 'do not list implied . and ..').option('-d, --directory', 'list directory entries instead of contents, and do not dereference symbolic links').option('-F, --classify', 'append indicator (one of */=>@|) to entries').option('-h, --human-readable', 'with -l, print sizes in human readable format (e.g., 1K 234M 2G)').option('-i, --inode', 'print the index number of each file').option('-l', 'use a long listing format').option('-Q, --quote-name', 'enclose entry names in double quotes').option('-r, --reverse', 'reverse order while sorting').option('-R, --recursive', 'list subdirectories recursively').option('-S', 'sort by file size').option('-t', 'sort by modification time, newest first').option('-U', 'do not sort; list entries in directory order').option('-w, --width [COLS]', 'assume screen width instead of current value').option('-x', 'list entries by lines instead of columns').option('-1', 'list one file per line').autocomplete(fsAutocomplete()).action(function (args, cb) {\n    return interfacer.call(this, {\n      command: ls,\n      args: args.paths,\n      options: args.options,\n      callback: cb\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/colorFile.js":"'use strict';\n\nvar strip = require('./stripAnsi');\n\nvar chalk = {};\nvar map = { cyan: 36, red: 31, magenta: 35 };\nObject.keys(map).forEach(function (key, value) {\n  chalk[key] = function (str) {\n    return '\\u001b[' + value + 'm' + str + '\\u001b[39m';\n  };\n});\n\n/**\n * Wraps file strings in ANSI colors\n * based on their extension.\n *\n * @param {file} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function (file) {\n  var audio = ['aac', 'au', 'flac', 'mid', 'midi', 'mka', 'mp3', 'mpc', 'ogg', 'ra', 'wav', 'axa', 'oga', 'spx', 'xspf'];\n  var archive = ['tar', 'tgz', 'arj', 'taz', 'lzh', 'lzma', 'tlz', 'txz', 'zip', 'z', 'Z', 'dz', 'gz', 'lz', 'xz', 'bz2', 'bz', 'tbz', 'tbz2', 'tz', 'deb', 'rpm', 'jar', 'rar', 'ace', 'zoo', 'cpio', '7z', 'rz'];\n  var images = ['jpg', 'jpeg', 'gif', 'bmp', 'pbm', 'pgm', 'ppm', 'tga', 'xbm', 'xpm', 'tif', 'tiff', 'png', 'svg', 'svgz', 'mng', 'pcx', 'mov', 'mpg', 'mpeg', 'm2v', 'mkv', 'ogm', 'mp4', 'm4v', 'mp4v', 'vob', 'qt', 'nuv', 'wmv', 'asf', 'rm', 'rmvb', 'flc', 'avi', 'fli', 'flv', 'gl', 'dl', 'xcf', 'xwd', 'yuv', 'cgm', 'emf', 'axv', 'anx', 'ogv', 'ogx'];\n\n  var extension = String(file).toLowerCase().trim().split('.');\n  extension = extension[extension.length - 1];\n\n  var colored = strip(file);\n  colored = audio.indexOf(extension) > -1 ? chalk.cyan(file) : archive.indexOf(extension) > -1 ? chalk.red(file) : images.indexOf(extension) > -1 ? chalk.magenta(file) : colored;\n\n  return colored;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/columnify.js":"'use strict';\n\nvar strip = require('./stripAnsi');\nvar pad = require('./pad');\n\n/**\n * Formats an array to display in a TTY\n * in a pretty fashion.\n *\n * @param {Array} arr\n * @return {String}\n * @api public\n */\n\nmodule.exports = function (arr, options) {\n  arr = arr || [];\n  options = options || {};\n  var bk = JSON.parse(JSON.stringify(arr));\n  var width = options.width && !isNaN(options.width) ? options.width : process.stdout.columns;\n  var longest = strip(bk.sort(function (a, b) {\n    return strip(b).length - strip(a).length;\n  })[0] || '').length + 2;\n  var fullWidth = strip(arr.join('')).length;\n  var fitsOneLine = fullWidth + arr.length * 2 <= width;\n  var cols = Math.floor(width / longest);\n  cols = cols < 1 ? 1 : cols;\n  if (fitsOneLine) {\n    return arr.join('  ');\n  }\n  var col = 0;\n  var lines = [];\n  var line = '';\n  for (var i = 0; i < arr.length; ++i) {\n    if (col < cols) {\n      col++;\n    } else {\n      if (String(strip(line)).trim() !== '') {\n        lines.push(line);\n      }\n      line = '';\n      col = 1;\n    }\n    if (cols === 1) {\n      // If we have files so damn\n      // long that we wrap, don't pad\n      // the lines.\n      line += arr[i];\n    } else {\n      // Pad the lines based on the\n      // longest word.\n      line += pad(arr[i], longest, ' ');\n    }\n  }\n  if (line !== '') {\n    lines.push(line);\n  }\n  return lines.join('\\n');\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/converter.date.js":"'use strict';\n\n/**\n * Date conversion utilities\n */\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction pad(num, padding) {\n  padding = padding || '0';\n  num = parseFloat(num);\n  if (num < 10) {\n    return '' + padding + num;\n  }\n  return num;\n}\n\nmodule.exports = {\n  unix: function unix(dt) {\n    var date = dt;\n    var day = pad(date.getDate(), ' ');\n    var month = months[date.getMonth()];\n    var hour = pad(date.getHours());\n    var min = pad(date.getMinutes());\n    var hourMin = hour + ':' + min;\n    day = day.length === 1 ? ' ' + day : day;\n    date = month + ' ' + day + ' ' + hourMin;\n    return date;\n  }\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/fileFromPath.js":"'use strict';\n\n/**\n * Parses a path and returns just the file\n *\n * @param {path} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function (path) {\n  var fileShort = String(path).split('/');\n  fileShort = fileShort[fileShort.length - 1];\n  fileShort = fileShort.split('\\\\');\n  fileShort = fileShort[fileShort.length - 1];\n  return fileShort;\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/converter.permissions.js":"'use strict';\n\n/**\n * Permission conversion utilities\n */\n\nmodule.exports = {\n\n  listing: {\n    0: '---',\n    1: '--x',\n    2: '-w-',\n    3: '-wx',\n    4: 'r--',\n    5: 'r-x',\n    6: 'rw-',\n    7: 'rwx'\n  },\n\n  modeToRWX: function modeToRWX(mode) {\n    var octal = this.modeToOctal(mode);\n    var rwx = this.octalToRWX(octal);\n    return rwx;\n  },\n  modeToOctal: function modeToOctal(mode) {\n    var octal = '0' + (mode & 511).toString(8);\n    return octal;\n  },\n  octalToRWX: function octalToRWX(octal) {\n    if (!octal) {\n      return undefined;\n    }\n    var list = this.listing;\n    var a = list[String(octal).charAt(1)];\n    var b = list[String(octal).charAt(2)];\n    var c = list[String(octal).charAt(3)];\n    return a + b + c;\n  }\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/walkDir.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * Walks a single directory calling\n * a callback function for each file or\n * folder, returning the path and results\n * of fs.statSync.\n *\n * @param {String} currentDirPath\n * @param {Function} callback\n * @api public\n */\n\nmodule.exports = function (currentDirPath, callback) {\n  function readFile(path, cbk) {\n    var stat = undefined;\n    try {\n      stat = fs.statSync(path);\n      if (stat.isFile() || stat.isDirectory()) {\n        cbk(path, stat);\n      }\n    } catch (e) {\n      // .. if we can't read the file, forget\n      // about it for now.\n    }\n  }\n  try {\n    var dirs = fs.readdirSync(currentDirPath);\n    dirs.forEach(function (name) {\n      var filePath = path.join(currentDirPath, name);\n      readFile(filePath, callback);\n    });\n  } catch (e) {\n    if (e.code === 'ENOTDIR') {\n      readFile(currentDirPath, callback);\n    }\n  }\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/walkDirRecursive.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * Recursively walks through and executes\n * a callback function for each directory found.\n *\n * @param {String} currentDirPath\n * @param {Function} callback\n * @api public\n */\n\nmodule.exports = function (currentDirPath, callback) {\n  fs.readdirSync(currentDirPath).forEach(function (name) {\n    var filePath = path.join(currentDirPath, name);\n    var stat = fs.statSync(filePath);\n    if (stat.isDirectory()) {\n      callback(filePath, stat);\n      module.exports(filePath, callback);\n    }\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/ls.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: ls [OPTION]... [FILE]...\\nList information about the FILEs (the current directory by default).\\nSort entries alphabetically if none of -tSU nor --sort is specified.\\n\\n  -a, --all                  do not ignore entries starting with .\\n  -A, --almost-all           do not list implied . and ..\\n  -d, --directory            list directory entries instead of contents,\\n                               and do not dereference symbolic links\\n  -f                         do not sort, enable -aU, disable -ls --color\\n  -F, --classify             append indicator (one of */=>@|) to entries\\n  -h, --human-readable       with -l, print sizes in human readable format\\n  -i, --inode                print the index number of each file\\n  -l                         use a long listing format\\n  -q, --hide-control-chars   print ? instead of non graphic characters\\n  -r, --reverse              reverse order while sorting\\n  -R, --recursive            list subdirectories recursively\\n  -S                         sort by file size\\n  -t                         sort by modification time, newest first\\n  -U                         do not sort; list entries in directory order\\n  -w, --width=COLS           assume screen width instead of current value\\n  -x                         list entries by lines instead of by columns\\n  -1                         list one file per line\\n      --help                 display this help and exit\\n\\nExit status:\\n  0   if OK,\\n  1   if minor problems (e.g., cannot access subdirectory),\\n  2   if serious trouble (e.g., cannot access command-line argument).\\n\\nReport ls bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/mkdir.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar mkdir = {\n  exec: function exec(args, options) {\n    var self = this;\n    var dirs = args || [];\n    options = options || {};\n\n    if (typeof dirs === 'string') {\n      dirs = dirs.split(' ');\n    }\n\n    dirs = dirs.filter(function (str) {\n      return String(str).trim() !== '';\n    });\n\n    if (dirs.length < 1) {\n      this.log('mkdir: missing operand\\nTry \\'mkdir --help\\' for more information.');\n    }\n\n    dirs.forEach(function (dir) {\n      if (fs.existsSync(dir)) {\n        if (!options.parents) {\n          self.log('mkdir: cannot create directory ' + dir + ': File exists');\n        }\n        return;\n      }\n\n      // Base dir does not exist, and no -p option given\n      var baseDir = path.dirname(dir);\n      if (!fs.existsSync(baseDir) && !options.parents) {\n        self.log('mkdir: cannot create directory ' + dir + ': No such file or directory');\n        return;\n      }\n\n      if (options.parents) {\n        mkdirSyncRecursive.call(self, dir, options);\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n        if (options.verbose) {\n          self.log('mkdir: created directory ' + dir);\n        }\n      }\n    });\n    return 0;\n  }\n};\n\nfunction mkdirSyncRecursive(dir, options) {\n  var baseDir = path.dirname(dir);\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    if (options.verbose) {\n      this.log('mkdir: created directory ' + dir);\n    }\n    return;\n  }\n  mkdirSyncRecursive.call(this, baseDir, options);\n  fs.mkdirSync(dir, parseInt('0777', 8));\n  if (options.verbose) {\n    this.log('mkdir: created directory ' + dir);\n  }\n}\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return mkdir;\n  }\n  vorpal.api.mkdir = mkdir;\n  vorpal.command('mkdir [directory...]').parse(preparser).option('-p, --parents', 'no error if existing, make parent directories as needed').option('-v, --verbose', 'print a message for each created directory').autocomplete(fsAutocomplete({ directory: true })).action(function (args, callback) {\n    args.options = args.options || {};\n    args.options.vorpal = vorpal;\n    return interfacer.call(this, {\n      command: mkdir,\n      args: args.directory,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/mkdir.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: mkdir [OPTION]... DIRECTORY...\\nCreate the DIRECTORY(ies), if they do not already exist.\\n\\n  -p, --parents     no error if existing, make parent directories as needed\\n  -v, --verbose     print a message for each created directory\\n      --help        display this help and exit\\n\\nReport mkdir bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/mv.js":"'use strict';\n\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\nvar path = require('path');\n\nvar expand = require('./../util/expand');\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar mv = {\n  exec: function exec(args, options) {\n    var self = this;\n    options = options || {};\n\n    args = args === undefined ? [] : args;\n    args = Array.isArray(args) ? args : args.split(' ');\n    args = args.filter(function (arg) {\n      return String(arg).trim() !== '';\n    });\n\n    options.noclobber = options.force === true ? false : options.noclobber;\n\n    if (args.length < 1) {\n      this.log('mv: missing file operand\\nTry \\'mv --help\\' for more information.');\n      return 1;\n    }\n\n    if (args.length === 1) {\n      this.log('mv: missing destination file operand after ' + args[0] + '\\nTry \\'mv --help\\' for more information.');\n      return 1;\n    }\n\n    args = expand(args);\n\n    var dest = args.pop();\n    var sources = args;\n\n    var exists = fs.existsSync(dest);\n    var stats = exists && fs.statSync(dest);\n\n    // Dest is not existing dir, but multiple sources given\n    if ((!exists || !stats.isDirectory()) && sources.length > 1) {\n      this.log('mv: target ' + dest + ' is not a directory');\n      return 1;\n    }\n\n    // Dest is an existing file, but no -f given\n    if (exists && stats.isFile() && options.noclobber) {\n      // just dont do anything\n      return 0;\n    }\n\n    if (options.striptrailingslashes) {\n      sources = sources.map(function (src) {\n        return String(src).replace(/\\/$/g, '');\n      });\n    }\n\n    sources.forEach(function (src) {\n      if (!fs.existsSync(src)) {\n        self.log('mv: cannot stat ' + src + ': No such file or directory');\n        return;\n      }\n\n      // When copying to '/path/dir', iDest = '/path/dir/file1'\n      var iDest = dest;\n      if (exists && stats.isDirectory()) {\n        iDest = path.normalize(dest + '/' + path.basename(src));\n      }\n\n      // If the file exists and we're not clobbering, skip.\n      if (fs.existsSync(iDest) && options.noclobber) {\n        return;\n      }\n\n      if (path.resolve(src) === path.dirname(path.resolve(iDest))) {\n        self.log('mv: ' + src + ' and ' + iDest + ' are the same file');\n        return;\n      }\n\n      fs.renameSync(src, iDest);\n      if (options.verbose === true) {\n        self.log(String(src + ' -> ' + iDest).replace(/\\\\/g, '/'));\n      }\n    });\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return mv;\n  }\n  vorpal.api.mv = mv;\n  vorpal.command('mv [args...]').parse(preparser).option('-f, --force', 'do not prompt before overwriting').option('-n, --no-clobber', 'do not overwrite an existing file').option('--striptrailingslashes', 'remove any trailing slashes from each source') // vorpal bug, need to add dashes between words\n  .option('-v, --verbose', 'explain what is being done').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: mv,\n      args: args.args,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/mv.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: mv [OPTION]... [-T] SOURCE DEST\\n  or:  mv [OPTION]... SOURCE... DIRECTORY\\n  or:  mv [OPTION]... -t DIRECTORY SOURCE...\\nRename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\\n\\n  -f, --force                  do not prompt before overwriting\\n  -n, --no-clobber             do not overwrite an existing file\\n      --striptrailingslashes   remove any trailing slashes from each SOURCE\\n                                 argument\\n  -v, --verbose                explain what is being done\\n      --help                   display this help and exit\\n\\nIf you specify -f and -n, only -f takes effect.\\n\\nReport mv bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/pwd.js":"'use strict';\n\nvar path = require('path');\n\nvar interfacer = require('./../util/interfacer');\n\nvar pwd = {\n  exec: function exec() {\n    this.log(path.resolve(process.cwd()).replace(/\\\\/g, '/'));\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return pwd;\n  }\n  vorpal.api.pwd = pwd;\n  vorpal.command('pwd [files...]').action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: pwd,\n      args: args.files,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/pwd.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: pwd [-LP]\\nPrint the name of the current working directory.\\n\\n      --help        display this help and exit\\n\\nExit status:\\n  0   if OK,\\n  1   if an invalid option is given or the current directory\\n      cannot be read.\\n\\nReport pwd bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/sort.js":"'use strict';\n\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar fetch = require('./../util/fetch');\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\nvar strip = require('./../util/stripAnsi');\nvar shuffle = require('array-shuffle');\n\nvar sort = {\n\n  counter: 0,\n\n  stdin: '',\n\n  exec: function exec(args, options) {\n    var self = this;\n\n    // Hack to handle multiple calls\n    // due to fragmented stdin, such as\n    // by piping. In essence, we're waiting\n    // 100 milliseconds for all of the\n    // requests to come in, and then running\n    // sort. Only applies when sort is called\n    // through a piped command.\n    /* istanbul ignore next */\n    if (args && args.stdin && options.bypass !== true) {\n      sort.counter++;\n      sort.stdin += args.stdin + '\\n';\n      if (sort.counter === 1) {\n        setTimeout(function () {\n          sort.counter = 0;\n          args.stdin = sort.stdin;\n          sort.stdin = '';\n          options.bypass = true;\n          sort.exec.call(self, args, options);\n        }, 100);\n      }\n      return;\n    }\n    sort.counter = 0;\n    sort.stdin = '';\n\n    // Input normalization\n    if (args === undefined) {\n      args = {\n        files: []\n      };\n    } else if (typeof args === 'string' || args instanceof String) {\n      args = {\n        files: [args]\n      };\n    } else if (Array.isArray(args)) {\n      args = {\n        files: args\n      };\n    }\n\n    options = options || {};\n\n    function log(stdout) {\n      if (options.output) {\n        if (options.output === true) {\n          self.log('sort: option \\'--output\\' requires an argument\\nTry \\'sort --help\\' for more information.');\n          return 0;\n        }\n        try {\n          fs.writeFileSync(options.output, stdout);\n          return 0;\n        } catch (e) {\n          if (e.code === 'ENOENT') {\n            self.log('sort: open failed: ' + options.output + ': No such file or directory');\n          } else {\n            /* istanbul ignore next */\n            self.log('sort: open failed: ' + options.output + ': ' + e.code);\n          }\n          return 2;\n        }\n      } else {\n        self.log(stdout);\n      }\n    }\n\n    try {\n      var stdin = fetch(args.files, args.stdin, {\n        onDirectory: function onDirectory(name) {\n          /* istanbul ignore next */\n          return 'sort: read failed: ' + name + ': Is a directory';\n        },\n        onInvalidFile: function onInvalidFile(name) {\n          /* istanbul ignore next */\n          return 'sort: cannot read: ' + name + ': No such file or directory';\n        }\n      });\n\n      var combined = '';\n      for (var i = 0; i < stdin.length; ++i) {\n        // Get rid of trailing line break because\n        // node logging does it anyway.\n        combined += stdin[i];\n      }\n\n      combined = combined.replace(/\\s$/, '');\n      var parts = String(combined).split('\\n');\n\n      if (options.check) {\n        // Check if the thing was already sorted.\n        var original = String(combined).split('\\n');\n        var disorder = undefined;\n        for (var i = 0; i < original.length; ++i) {\n          var a = original[i];\n          var b = original[i + 1];\n          if (a && b) {\n            if (!isNaN(a) && !isNaN(b) && parseFloat(a) > parseFloat(b)) {\n              /* istanbul ignore next */\n              disorder = true;\n            } else if (a > b) {\n              disorder = true;\n            }\n            if (disorder) {\n              // To do: right now, I don't say the file\n              // name of the bad sorted item - I have to\n              // figure this out as I join all the files\n              // together beforehand and lose track.\n              disorder = 'sort: -:' + (i + 2) + ': disorder: ' + b;\n              break;\n            }\n          }\n        }\n        if (disorder) {\n          log(disorder);\n          return;\n        }\n      }\n\n      parts = parts.sort(function (a, b) {\n        var aAlpha = strip(a).replace(/\\W+/g, '');\n        var bAlpha = strip(b).replace(/\\W+/g, '');\n        var aNumeric = strip(a).replace(/\\D/g, '');\n        var bNumeric = strip(b).replace(/\\D/g, '');\n        if (options.humannumericsort) {\n          var aHuman = parseHumanReadableNumbers(strip(a));\n          var bHuman = parseHumanReadableNumbers(strip(b));\n          if (aHuman.group < bHuman.group) {\n            return -1;\n          } else if (aHuman.group > bHuman.group) {\n            return 1;\n          } else if (aHuman.num < bHuman.num) {\n            return -1;\n          } else if (aHuman.num > bHuman.num) {\n            return 1;\n          }\n          return aAlpha.localeCompare(bAlpha);\n        } else if (options.monthsort) {\n          var aMonth = parseMonths(strip(a));\n          var bMonth = parseMonths(strip(b));\n          var result = aMonth - bMonth;\n          if (aMonth === bMonth) {\n            result = aAlpha.localeCompare(bAlpha);\n          }\n          return result;\n        } else if (options.numericsort) {\n          var result = aNumeric - bNumeric;\n          result = result === 0 ? aAlpha.localeCompare(bAlpha) : result;\n          return result;\n        }\n        return aAlpha.localeCompare(bAlpha);\n      });\n\n      if (options.randomsort) {\n        parts = shuffle(parts);\n      }\n\n      if (options.reverse) {\n        parts.reverse();\n      }\n\n      var out = parts.join('\\n');\n      if (String(out).trim() !== '') {\n        log(out);\n      }\n\n      return;\n    } catch (e) {\n      /* istanbul ignore next */\n      self.log(e.stack);\n      /* istanbul ignore next */\n      return;\n    }\n  }\n};\n\n// This shit is gnarly.\n// Per the coreutils sort.c:\n// <none/unknown> < K/k < M < G < T < P < E < Z < Y\nvar humanOrdering = { '': 0, 'K': 1, 'k': 1, 'M': 2, 'G': 3, 'T': 4, 'P': 5, 'E': 6, 'Z': 7 };\nvar humanReadableSort = new RegExp(/^([0-9]+)?[\\.]?[0-9]+[K|k|M|G|T|P|E|Z|Y]/g);\nfunction parseHumanReadableNumbers(nbr) {\n  nbr = String(nbr).replace(/(\\r\\n|\\n|\\r)/gm, '');\n  if (String(nbr).match(humanReadableSort)) {\n    var num = parseFloat(String(nbr).replace(/[a-zA-Z]/g, '').trim());\n    var group = humanOrdering[String(nbr).replace(/[^a-zA-Z]/g, '').trim()] || 0;\n    return {\n      num: num,\n      group: group\n    };\n  }\n  var isNumber = String(nbr).match(/^[0-9]/);\n  var stripped = isNumber ? parseFloat(String(nbr).replace(/[^0-9.]/g, '')) : 'NaN';\n  var result = !isNaN(stripped) ? stripped : -99999999999;\n  return {\n    num: result,\n    group: 0\n  };\n}\n\nvar monthOrdering = {\n  jan: 1,\n  feb: 2,\n  mar: 3,\n  apr: 4,\n  may: 5,\n  jun: 6,\n  jul: 7,\n  aug: 8,\n  sep: 9,\n  oct: 10,\n  nov: 11,\n  dec: 12\n};\n\nvar months = new RegExp(/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i);\nfunction parseMonths(str) {\n  var match = String(str).match(months);\n  if (match) {\n    return monthOrdering[String(str.slice(0, 3).toLowerCase())];\n  }\n  return 0;\n}\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return sort;\n  }\n  vorpal.api.sort = sort;\n  vorpal.command('sort [files...]').parse(preparser).option('-M, --month-sort', 'compare (unknown) < \\'JAN\\' < ... < \\'DEC\\'').option('-h, --human-numeric-sort', 'compare human readable numbers (e.g., 2K 1G)').option('-n, --numeric-sort', 'compare according to string numerical value').option('-R, --random-sort', 'sort by random hash of keys').option('-r, --reverse', 'reverse the result of comparisons').option('-c, --check', 'check for sorted input; do not sort').option('-o, --output [file]', 'write result to file instead of standard output').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: sort,\n      args: args,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/sort.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: sort [OPTION]... [FILE]...\\nWrite sorted concatenation of all FILE(s) to standard output.\\n\\nOrdering options:\\n  -M, --month-sort            compare (unknown) < 'JAN' < ... < 'DEC'\\n  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\\n  -n, --numeric-sort          compare according to string numerical value\\n  -R, --random-sort           sort by random hash of keys\\n  -r, --reverse               reverse the result of comparisons\\n\\nOther options:\\n  -c, --check,\\n      --check=diagnose-first  check for sorted input; do not sort\\n  -o, --output=FILE           write result to FILE instead of standard output\\n      --help                  display this help and exit\\n\\nWith no FILE, or when FILE is -, read standard input.\\n\\nReport sort bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/source.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\nvar fs = require('fs');\n\nvar usage = '-cash: source: filename argument required\\nsource: usage: source filename [arguments]';\n\nvar source = {\n  exec: function exec(args, options) {\n    options = options || {};\n    args = args || {};\n\n    if (typeof args === 'string') {\n      var params = args.split(/\\s+/);\n      args = {};\n      args.file = params[0];\n      if (params.length > 1) {\n        args.params = params.slice(1);\n      }\n    }\n\n    var vorpal = options.vorpal;\n\n    /* istanbul ignore next */\n    if (!vorpal) {\n      throw new Error('Source is not programatically supported.');\n    }\n\n    if (!args.file) {\n      this.log(usage);\n      return 2;\n    }\n    try {\n      // Once support for referencing parameters ($1, $2, etc.) gets added, this\n      // should swap these out with the value of args.params\n      fs.readFileSync(args.file, 'utf8').split('\\n').forEach(function (line) {\n        if (line) {\n          vorpal.execSync(line); // execute each line in the current environment\n        }\n      });\n    } catch (e) {\n      if (e.code === 'ENOENT') {\n        this.log('-cash: ' + args.file + ': No such file or directory');\n      } else if (e.code === 'EACCES') {\n        this.log('-cash: ' + args.file + ': Permission denied');\n      } else if (e.code === 'EISDIR') {\n        this.log('-cash: source: ' + args.file + ': is a directory');\n      } else {\n        /* istanbul ignore next */\n        this.log('-cash: source: unable to read ' + args.file);\n      }\n      return 1;\n    }\n\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return source;\n  }\n  vorpal.api.source = source;\n  vorpal.command('source [file] [params...]').alias('.').parse(preparser).action(function (args, callback) {\n    args.options = args.options || {};\n    args.options.vorpal = vorpal;\n    return interfacer.call(this, {\n      command: source,\n      args: args,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/source.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: source FILENAME [ARGUMENTS...]\\n  or:  . FILENAME [ARGUMENTS...]\\nRead and execute commands from the filename argument in the current shell.\\n\\nWhen a script is run using source, it runs within the existing shell and any\\nchange of directory or modified variables or aliases will persist after the\\nscript completes. Scripts may contain any commands that cash supports.\\n\\n      --help   display this help and exit\\n\\nReport source bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/tail.js":"'use strict';\n\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar interfacer = require('./../util/interfacer');\nvar expand = require('./../util/expand');\nvar unixPath = require('./../util/converter.path').unix;\n\nvar tail = {\n  exec: function exec(args, options) {\n    options = options || {};\n    var lines = options.lines ? Math.abs(options.lines) : 10;\n    if (!Number.isInteger(lines)) {\n      this.log('tail: ' + options.lines + ': invalid number of lines');\n      return 0;\n    }\n\n    var files = args;\n    files = files === undefined ? [] : files;\n    files = typeof files === 'string' ? String(files).split(' ') : files;\n    files = files.filter(function (file) {\n      return String(file).trim() !== '';\n    });\n    files = expand(files);\n\n    var out = '';\n    for (var i = 0; i < files.length; i++) {\n      var fileFound = false;\n      var isFile = false;\n\n      try {\n        fs.accessSync(files[i], fs.F_OK);\n        fileFound = true;\n      } catch (e) {\n        out += 'tail: cannot open ' + unixPath(files[i]) + ' for reading: No such file or directory\\n';\n      }\n\n      if (fileFound) {\n        isFile = fs.statSync(files[i]).isFile();\n      }\n\n      if (isFile) {\n        var name = unixPath(files[i]);\n        var content = fs.readFileSync(files[i], 'utf8').trim().split('\\n');\n        var verbose = files.length > 1 && !options.silent || options.verbose;\n        if (verbose) {\n          out += '==> ' + name + ' <==\\n';\n        }\n        var sliced = content.slice(content.length - lines, content.length);\n        out += sliced.join('\\n') + '\\n';\n      }\n    }\n\n    out = out.replace(/\\n$/, '');\n    if (out.trim() !== '') {\n      this.log(out);\n    }\n\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return tail;\n  }\n  vorpal.api.tail = tail;\n  vorpal.command('tail [files...]').option('-n, --lines <number>', 'Output the last N lines, instead of the last 10').option('-q, --silent', 'Suppresses printing of headers when multiple files are being examined.').option('-v, --verbose', 'Always output headers giving file names.').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: tail,\n      args: args.files,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/tail.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: tail [OPTION]... [FILE]...\\nDisplay the last part of a file.\\n\\nPrint the last 10 lines of each FILE to standard output. With more\\nthan one FILE, precede each with a header giving the file name.\\n\\n  -n, --lines <number>        output the last N lines, instead of the last 10\\n  -q, --silent                suppresses printing of headers when multiple files\\n                                are being examined\\n  -v, --verbose               always output headers giving file names\\n      --help                  display this help and exit\\n\\nReport tail bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/touch.js":"'use strict';\n\nvar fs = require('fs-extra');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\nrequire('./../lib/sugar');\n\nvar touch = {\n\n  /**\n   * Main command execution.\n   *\n   * @param {Object} args\n   * @return {Object} { status, stdout }\n   * @api public\n   */\n\n  exec: function exec(files, options) {\n    var self = this;\n    files = files || ['.'];\n    files = !Array.isArray(files) ? [files] : files;\n    options = options || {};\n\n    // If any version of --no-create is passed, change it to false.\n    options.create = options.create === true ? false : options.create;\n\n    // If --time is passed, ensure a valid param is called in\n    // and map it to -a or -m, as this is the equivalent of these.\n    // Throw an error if nothing valid passed.\n    if (options.time) {\n      var a = ['access', 'atime', 'use'];\n      var m = ['modify', 'mtime'];\n      var opt = a.indexOf(options.time) > -1 ? 'a' : m.indexOf(options.time) > -1 ? 'm' : undefined;\n      if (!opt) {\n        var error = 'touch: invalid argument \"' + options.time + '\" for \"--time\"\\n' + 'Valid arguments are:\\n' + '  - \"atime\", \"access\", \"use\"\\n' + '  - \"mtime\", \"modify\"\\n' + 'Try \\'touch --help\\' for more information.';\n        // I think this is the stupidest thing\n        // I've ever written.\n        try {\n          throw new Error(error);\n        } catch (e) {\n          return touch.error.call(self, e);\n        }\n      } else {\n        options[opt] = true;\n      }\n    }\n\n    try {\n      var err = false;\n      for (var i = 0; i < files.length; ++i) {\n        try {\n          touch.file(files[i], options);\n        } catch (e) {\n          err = e;\n          break;\n        }\n      }\n      if (err) {\n        return touch.error.call(self, err);\n      }\n      return 0;\n    } catch (e) {\n      return touch.error.call(self, e);\n    }\n  },\n\n\n  /**\n   * Returns touch stderr and response codes\n   * for errors.\n   *\n   * @param {Error} e\n   * @return {Object} { status, stdout }\n   * @api private\n   */\n\n  error: function error(e) {\n    this.log(e.message);\n    return 2;\n  },\n\n\n  /**\n   * Handler for a single file using touch.\n   *\n   * @param {String} path\n   * @param {Object} options\n   * @api private\n   */\n\n  file: function file(path, options) {\n    try {\n      try {\n        fs.lstatSync(path);\n      } catch (e) {\n        // If the file doesn't exist and\n        // the user doesn't want to create it,\n        // we have no purpose in life. Goodbye.\n        if (options.create === false) {\n          throw new Error(e);\n        } else {\n          fs.closeSync(fs.openSync(path, 'wx'));\n        }\n      }\n\n      var stat = fs.statSync(path);\n      var dateToSet = options.date ? Date.create(options.date) : new Date();\n\n      if (String(dateToSet) === 'Invalid Date') {\n        throw new Error('touch: invalid date format ' + options.date);\n      }\n\n      // If -m, keep access time current.\n      var atime = options.m === true ? new Date(stat.atime) : dateToSet;\n\n      // If -a, keep mod time to current.\n      var mtime = options.a === true ? new Date(stat.mtime) : dateToSet;\n\n      if (options.reference !== undefined) {\n        var reference = undefined;\n        try {\n          reference = fs.statSync(options.reference);\n        } catch (e) {\n          throw new Error('touch: failed to get attributes of ' + options.reference + ': No such file or directory');\n        }\n        atime = options.m === true ? atime : reference.atime;\n        mtime = options.a === true ? mtime : reference.mtime;\n      }\n\n      fs.utimesSync(path, atime, mtime);\n      fs.utimesSync(path, atime, mtime);\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return touch;\n  }\n  vorpal.api.touch = touch;\n  vorpal.command('touch <files...>').parse(preparser).option('-a', 'change only the access time').option('-c, --no-create', 'do not create any files').option('-d, --date [STRING]', 'parse STRING and use it instead of current time').option('-m', 'change only the modification time').option('-r, --reference [FILE]', 'use this file\\'s times instead of current time').option('--time [WORD]', 'change the specified time: WORD is access, atime, or use: equivalent to -a WORD is modify or mtime: equivalent to -m').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    return interfacer.call(this, {\n      command: touch,\n      args: args.files || [],\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/lib/sugar.js":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*\n *  Sugar Library v1.4.1\n *\n *  Freely distributable and licensed under the MIT-style license.\n *  Copyright (c) 2014 Andrew Plummer\n *  http://sugarjs.com/\n *\n * ---------------------------- */\n/* istanbul ignore next */\n(function () {\n  function aa(a) {\n    return function () {\n      return a;\n    };\n  }\n  /* istanbul ignore next */\n  var m = Object,\n      p = Array,\n      q = RegExp,\n      r = Date,\n      s = String,\n      t = Number,\n      u = Math,\n      ba = \"undefined\" !== typeof global ? global : this,\n      v = m.prototype.toString,\n      da = m.prototype.hasOwnProperty,\n      ea = m.defineProperty && m.defineProperties,\n      fa = \"function\" === typeof q(),\n      ga = !(\"0\" in new s(\"a\")),\n      ia = {},\n      ja = /^\\[object Date|Array|String|Number|RegExp|Boolean|Arguments\\]$/,\n      w = \"Boolean Number String Array Date RegExp Function\".split(\" \"),\n      la = ka(\"boolean\", w[0]),\n      y = ka(\"number\", w[1]),\n      z = ka(\"string\", w[2]),\n      A = ma(w[3]),\n      C = ma(w[4]),\n      D = ma(w[5]),\n      F = ma(w[6]);\n  /* istanbul ignore next */\n  function ma(a) {\n    var b = \"Array\" === a && p.isArray || function (b, d) {\n      return (d || v.call(b)) === \"[object \" + a + \"]\";\n    };return ia[a] = b;\n  }function ka(a, b) {\n    function c(c) {\n      return G(c) ? v.call(c) === \"[object \" + b + \"]\" : (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) === a;\n    }return ia[b] = c;\n  }\n  function na(a) {\n    a.SugarMethods || (oa(a, \"SugarMethods\", {}), H(a, !1, !0, { extend: function extend(b, c, d) {\n        H(a, !1 !== d, c, b);\n      }, sugarRestore: function sugarRestore() {\n        return pa(this, a, arguments, function (a, c, d) {\n          oa(a, c, d.method);\n        });\n      }, sugarRevert: function sugarRevert() {\n        return pa(this, a, arguments, function (a, c, d) {\n          d.existed ? oa(a, c, d.original) : delete a[c];\n        });\n      } }));\n  }function H(a, b, c, d) {\n    var e = b ? a.prototype : a;na(a);I(d, function (d, f) {\n      var h = e[d],\n          l = J(e, d);F(c) && h && (f = qa(h, f, c));!1 === c && h || oa(e, d, f);a.SugarMethods[d] = { method: f, existed: l, original: h, instance: b };\n    });\n  }\n  function K(a, b, c, d, e) {\n    var g = {};d = z(d) ? d.split(\",\") : d;d.forEach(function (a, b) {\n      e(g, a, b);\n    });H(a, b, c, g);\n  }function pa(a, b, c, d) {\n    var e = 0 === c.length,\n        g = L(c),\n        f = !1;I(b.SugarMethods, function (b, c) {\n      if (e || -1 !== g.indexOf(b)) f = !0, d(c.instance ? a.prototype : a, b, c);\n    });return f;\n  }function qa(a, b, c) {\n    return function (d) {\n      return c.apply(this, arguments) ? b.apply(this, arguments) : a.apply(this, arguments);\n    };\n  }function oa(a, b, c) {\n    ea ? m.defineProperty(a, b, { value: c, configurable: !0, enumerable: !1, writable: !0 }) : a[b] = c;\n  }\n  function L(a, b, c) {\n    var d = [];c = c || 0;var e;for (e = a.length; c < e; c++) {\n      d.push(a[c]), b && b.call(a, a[c], c);\n    }return d;\n  }function sa(a, b, c) {\n    var d = a[c || 0];A(d) && (a = d, c = 0);L(a, b, c);\n  }function ta(a) {\n    if (!a || !a.call) throw new TypeError(\"Callback is not callable\");\n  }function M(a) {\n    return void 0 !== a;\n  }function N(a) {\n    return void 0 === a;\n  }function J(a, b) {\n    return !!a && da.call(a, b);\n  }function G(a) {\n    return !!a && (\"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) || fa && D(a));\n  }function ua(a) {\n    var b = typeof a === \"undefined\" ? \"undefined\" : _typeof(a);return null == a || \"string\" === b || \"number\" === b || \"boolean\" === b;\n  }\n  function va(a, b) {\n    b = b || v.call(a);try {\n      if (a && a.constructor && !J(a, \"constructor\") && !J(a.constructor.prototype, \"isPrototypeOf\")) return !1;\n    } catch (c) {\n      return !1;\n    }return !!a && \"[object Object]\" === b && \"hasOwnProperty\" in a;\n  }function I(a, b) {\n    for (var c in a) {\n      if (J(a, c) && !1 === b.call(a, c, a[c], a)) break;\n    }\n  }function wa(a, b) {\n    for (var c = 0; c < a; c++) {\n      b(c);\n    }\n  }function xa(a, b) {\n    I(b, function (c) {\n      a[c] = b[c];\n    });return a;\n  }function ya(a) {\n    ua(a) && (a = m(a));if (ga && z(a)) for (var b = a, c = 0, d; d = b.charAt(c);) {\n      b[c++] = d;\n    }return a;\n  }function O(a) {\n    xa(this, ya(a));\n  }\n  O.prototype.constructor = m;var P = u.abs,\n      za = u.pow,\n      Aa = u.ceil,\n      Q = u.floor,\n      R = u.round,\n      Ca = u.min,\n      S = u.max;function Da(a, b, c) {\n    var d = za(10, P(b || 0));c = c || R;0 > b && (d = 1 / d);return c(a * d) / d;\n  }var Ea = 48,\n      Fa = 57,\n      Ga = 65296,\n      Ha = 65305,\n      Ia = \".\",\n      Ja = \"\",\n      Ka = {},\n      La;function Ma() {\n    return \"\\t\\n\\u000b\\f\\r   ᠎             \\u2028\\u2029　﻿\";\n  }function Na(a, b) {\n    var c = \"\";for (a = a.toString(); 0 < b;) {\n      if (b & 1 && (c += a), b >>= 1) a += a;\n    }return c;\n  }\n  function Oa(a, b) {\n    var c, d;c = a.replace(La, function (a) {\n      a = Ka[a];a === Ia && (d = !0);return a;\n    });return d ? parseFloat(c) : parseInt(c, b || 10);\n  }function T(a, b, c, d) {\n    d = P(a).toString(d || 10);d = Na(\"0\", b - d.replace(/\\.\\d+/, \"\").length) + d;if (c || 0 > a) d = (0 > a ? \"-\" : \"+\") + d;return d;\n  }function Pa(a) {\n    if (11 <= a && 13 >= a) return \"th\";switch (a % 10) {case 1:\n        return \"st\";case 2:\n        return \"nd\";case 3:\n        return \"rd\";default:\n        return \"th\";}\n  }\n  function Qa(a, b) {\n    function c(a, c) {\n      if (a || -1 < b.indexOf(c)) d += c;\n    }var d = \"\";b = b || \"\";c(a.multiline, \"m\");c(a.ignoreCase, \"i\");c(a.global, \"g\");c(a.u, \"y\");return d;\n  }function Ra(a) {\n    z(a) || (a = s(a));return a.replace(/([\\\\/\\'*+?|()\\[\\]{}.^$])/g, \"\\\\$1\");\n  }function U(a, b) {\n    return a[\"get\" + (a._utc ? \"UTC\" : \"\") + b]();\n  }function Sa(a, b, c) {\n    return a[\"set\" + (a._utc && \"ISOWeek\" != b ? \"UTC\" : \"\") + b](c);\n  }\n  function Ta(a, b) {\n    var c = typeof a === \"undefined\" ? \"undefined\" : _typeof(a),\n        d,\n        e,\n        g,\n        f,\n        h,\n        l,\n        n;if (\"string\" === c) return a;g = v.call(a);d = va(a, g);e = A(a, g);if (null != a && d || e) {\n      b || (b = []);if (1 < b.length) for (l = b.length; l--;) {\n        if (b[l] === a) return \"CYC\";\n      }b.push(a);d = a.valueOf() + s(a.constructor);f = e ? a : m.keys(a).sort();l = 0;for (n = f.length; l < n; l++) {\n        h = e ? l : f[l], d += h + Ta(a[h], b);\n      }b.pop();\n    } else d = -Infinity === 1 / a ? \"-0\" : s(a && a.valueOf ? a.valueOf() : a);return c + g + d;\n  }function Ua(a, b) {\n    return a === b ? 0 !== a || 1 / a === 1 / b : Va(a) && Va(b) ? Ta(a) === Ta(b) : !1;\n  }\n  function Va(a) {\n    var b = v.call(a);return ja.test(b) || va(a, b);\n  }function Wa(a, b, c) {\n    var d,\n        e = a.length,\n        g = b.length,\n        f = !1 !== b[g - 1];if (!(g > (f ? 1 : 2))) return Xa(a, e, b[0], f, c);d = [];L(b, function (b) {\n      if (la(b)) return !1;d.push(Xa(a, e, b, f, c));\n    });return d;\n  }function Xa(a, b, c, d, e) {\n    d && (c %= b, 0 > c && (c = b + c));return e ? a.charAt(c) : a[c];\n  }function Ya(a, b) {\n    K(b, !0, !1, a, function (a, b) {\n      a[b + (\"equal\" === b ? \"s\" : \"\")] = function () {\n        return m[b].apply(null, [this].concat(L(arguments)));\n      };\n    });\n  }na(m);I(w, function (a, b) {\n    na(ba[b]);\n  });var Za, $a;\n  for ($a = 0; 9 >= $a; $a++) {\n    Za = s.fromCharCode($a + Ga), Ja += Za, Ka[Za] = s.fromCharCode($a + Ea);\n  }Ka[\",\"] = \"\";Ka[\"．\"] = Ia;Ka[Ia] = Ia;La = q(\"[\" + Ja + \"．,\" + Ia + \"]\", \"g\");\n  \"use strict\";H(m, !1, !1, { keys: function keys(a) {\n      var b = [];if (!G(a) && !D(a) && !F(a)) throw new TypeError(\"Object required\");I(a, function (a) {\n        b.push(a);\n      });return b;\n    } });\n  function ab(a, b, c, d) {\n    var e = a.length,\n        g = -1 == d,\n        f = g ? e - 1 : 0;c = isNaN(c) ? f : parseInt(c >> 0);0 > c && (c = e + c);if (!g && 0 > c || g && c >= e) c = f;for (; g && 0 <= c || !g && c < e;) {\n      if (a[c] === b) return c;c += d;\n    }return -1;\n  }function bb(a, b, c, d) {\n    var e = a.length,\n        g = 0,\n        f = M(c);ta(b);if (0 != e || f) f || (c = a[d ? e - 1 : g], g++);else throw new TypeError(\"Reduce called on empty array with no initial value\");for (; g < e;) {\n      f = d ? e - g - 1 : g, f in a && (c = b(c, a[f], f, a)), g++;\n    }return c;\n  }function cb(a) {\n    if (0 === a.length) throw new TypeError(\"First argument must be defined\");\n  }H(p, !1, !1, { isArray: function isArray(a) {\n      return A(a);\n    } });\n  H(p, !0, !1, { every: function every(a, b) {\n      var c = this.length,\n          d = 0;for (cb(arguments); d < c;) {\n        if (d in this && !a.call(b, this[d], d, this)) return !1;d++;\n      }return !0;\n    }, some: function some(a, b) {\n      var c = this.length,\n          d = 0;for (cb(arguments); d < c;) {\n        if (d in this && a.call(b, this[d], d, this)) return !0;d++;\n      }return !1;\n    }, map: function map(a, b) {\n      b = arguments[1];var c = this.length,\n          d = 0,\n          e = Array(c);for (cb(arguments); d < c;) {\n        d in this && (e[d] = a.call(b, this[d], d, this)), d++;\n      }return e;\n    }, filter: function filter(a) {\n      var b = arguments[1],\n          c = this.length,\n          d = 0,\n          e = [];for (cb(arguments); d < c;) {\n        d in this && a.call(b, this[d], d, this) && e.push(this[d]), d++;\n      }return e;\n    }, indexOf: function indexOf(a, b) {\n      return z(this) ? this.indexOf(a, b) : ab(this, a, b, 1);\n    }, lastIndexOf: function lastIndexOf(a, b) {\n      return z(this) ? this.lastIndexOf(a, b) : ab(this, a, b, -1);\n    }, forEach: function forEach(a, b) {\n      var c = this.length,\n          d = 0;for (ta(a); d < c;) {\n        d in this && a.call(b, this[d], d, this), d++;\n      }\n    }, reduce: function reduce(a, b) {\n      return bb(this, a, b);\n    }, reduceRight: function reduceRight(a, b) {\n      return bb(this, a, b, !0);\n    } });\n  H(Function, !0, !1, { bind: function bind(a) {\n      var b = this,\n          c = L(arguments, null, 1),\n          d;if (!F(this)) throw new TypeError(\"Function.prototype.bind called on a non-function\");d = function d() {\n        return b.apply(b.prototype && this instanceof b ? this : a, c.concat(L(arguments)));\n      };d.prototype = this.prototype;return d;\n    } });H(r, !1, !1, { now: function now() {\n      return new r().getTime();\n    } });\n  (function () {\n    var a = Ma().match(/^\\s+$/);try {\n      s.prototype.trim.call([1]);\n    } catch (b) {\n      a = !1;\n    }H(s, !0, !a, { trim: function trim() {\n        return this.toString().trimLeft().trimRight();\n      }, trimLeft: function trimLeft() {\n        return this.replace(q(\"^[\" + Ma() + \"]+\"), \"\");\n      }, trimRight: function trimRight() {\n        return this.replace(q(\"[\" + Ma() + \"]+$\"), \"\");\n      } });\n  })();\n  (function () {\n    var a = new r(r.UTC(1999, 11, 31)),\n        a = a.toISOString && \"1999-12-31T00:00:00.000Z\" === a.toISOString();K(r, !0, !a, \"toISOString,toJSON\", function (a, c) {\n      a[c] = function () {\n        return T(this.getUTCFullYear(), 4) + \"-\" + T(this.getUTCMonth() + 1, 2) + \"-\" + T(this.getUTCDate(), 2) + \"T\" + T(this.getUTCHours(), 2) + \":\" + T(this.getUTCMinutes(), 2) + \":\" + T(this.getUTCSeconds(), 2) + \".\" + T(this.getUTCMilliseconds(), 3) + \"Z\";\n      };\n    });\n  })();\n  \"use strict\";\n  var W,\n      Ib,\n      Jb = \"ampm hour minute second ampm utc offset_sign offset_hours offset_minutes ampm\".split(\" \"),\n      Kb = \"({t})?\\\\s*(\\\\d{1,2}(?:[,.]\\\\d+)?)(?:{h}([0-5]\\\\d(?:[,.]\\\\d+)?)?{m}(?::?([0-5]\\\\d(?:[,.]\\\\d+)?){s})?\\\\s*(?:({t})|(Z)|(?:([+-])(\\\\d{2,2})(?::?(\\\\d{2,2}))?)?)?|\\\\s*({t}))\",\n      Lb = {},\n      Mb,\n      Nb,\n      Ob,\n      Pb = [],\n      Qb = {},\n      X = { yyyy: function yyyy(a) {\n      return U(a, \"FullYear\");\n    }, yy: function yy(a) {\n      return U(a, \"FullYear\") % 100;\n    }, ord: function ord(a) {\n      a = U(a, \"Date\");return a + Pa(a);\n    }, tz: function tz(a) {\n      return a.getUTCOffset();\n    }, isotz: function isotz(a) {\n      return a.getUTCOffset(!0);\n    },\n    Z: function Z(a) {\n      return a.getUTCOffset();\n    }, ZZ: function ZZ(a) {\n      return a.getUTCOffset().replace(/(\\d{2})$/, \":$1\");\n    } },\n      Rb = [{ name: \"year\", method: \"FullYear\", k: !0, b: function b(a) {\n      return 864E5 * (365 + (a ? a.isLeapYear() ? 1 : 0 : 0.25));\n    } }, { name: \"month\", error: 0.919, method: \"Month\", k: !0, b: function b(a, _b) {\n      var c = 30.4375,\n          d;a && (d = a.daysInMonth(), _b <= d.days() && (c = d));return 864E5 * c;\n    } }, { name: \"week\", method: \"ISOWeek\", b: aa(6048E5) }, { name: \"day\", error: 0.958, method: \"Date\", k: !0, b: aa(864E5) }, { name: \"hour\", method: \"Hours\", b: aa(36E5) }, { name: \"minute\",\n    method: \"Minutes\", b: aa(6E4) }, { name: \"second\", method: \"Seconds\", b: aa(1E3) }, { name: \"millisecond\", method: \"Milliseconds\", b: aa(1) }],\n      Sb = {};function Tb(a) {\n    xa(this, a);this.g = Pb.concat();\n  }\n  Tb.prototype = { getMonth: function getMonth(a) {\n      return y(a) ? a - 1 : this.months.indexOf(a) % 12;\n    }, getWeekday: function getWeekday(a) {\n      return this.weekdays.indexOf(a) % 7;\n    }, addFormat: function addFormat(a, b, c, d, e) {\n      var g = c || [],\n          f = this,\n          h;a = a.replace(/\\s+/g, \"[,. ]*\");a = a.replace(/\\{([^,]+?)\\}/g, function (a, b) {\n        var d,\n            e,\n            h,\n            B = b.match(/\\?$/);h = b.match(/^(\\d+)\\??$/);var k = b.match(/(\\d)(?:-(\\d))?/),\n            E = b.replace(/[^a-z]+$/, \"\");h ? d = f.tokens[h[1]] : f[E] ? d = f[E] : f[E + \"s\"] && (d = f[E + \"s\"], k && (e = [], d.forEach(function (a, b) {\n          var c = b % (f.units ? 8 : d.length);c >= k[1] && c <= (k[2] || k[1]) && e.push(a);\n        }), d = e), d = Ub(d));h ? h = \"(?:\" + d + \")\" : (c || g.push(E), h = \"(\" + d + \")\");B && (h += \"?\");return h;\n      });b ? (b = Vb(f, e), e = [\"t\", \"[\\\\s\\\\u3000]\"].concat(f.timeMarker), h = a.match(/\\\\d\\{\\d,\\d\\}\\)+\\??$/), Wb(f, \"(?:\" + b + \")[,\\\\s\\\\u3000]+?\" + a, Jb.concat(g), d), Wb(f, a + \"(?:[,\\\\s]*(?:\" + e.join(\"|\") + (h ? \"+\" : \"*\") + \")\" + b + \")?\", g.concat(Jb), d)) : Wb(f, a, g, d);\n    } };\n  function Xb(a, b, c) {\n    var d,\n        e,\n        g = b[0],\n        f = b[1],\n        h = b[2];b = a[c] || a.relative;if (F(b)) return b.call(a, g, f, h, c);e = a.units[8 * (a.plural && 1 < g ? 1 : 0) + f] || a.units[f];a.capitalizeUnit && (e = Yb(e));d = a.modifiers.filter(function (a) {\n      return \"sign\" == a.name && a.value == (0 < h ? 1 : -1);\n    })[0];return b.replace(/\\{(.*?)\\}/g, function (a, b) {\n      switch (b) {case \"num\":\n          return g;case \"unit\":\n          return e;case \"sign\":\n          return d.src;}\n    });\n  }function Zb(a, b) {\n    b = b || a.code;return \"en\" === b || \"en-US\" === b ? !0 : a.variant;\n  }\n  function $b(a, b) {\n    return b.replace(q(a.num, \"g\"), function (b) {\n      return ac(a, b) || \"\";\n    });\n  }function ac(a, b) {\n    var c;return y(b) ? b : b && -1 !== (c = a.numbers.indexOf(b)) ? (c + 1) % 10 : 1;\n  }function Y(a, b) {\n    var c;z(a) || (a = \"\");c = Sb[a] || Sb[a.slice(0, 2)];if (!1 === b && !c) throw new TypeError(\"Invalid locale.\");return c || Ib;\n  }\n  function bc(a, b) {\n    function c(a) {\n      var b = h[a];z(b) ? h[a] = b.split(\",\") : b || (h[a] = []);\n    }function d(a, b) {\n      a = a.split(\"+\").map(function (a) {\n        return a.replace(/(.+):(.+)$/, function (a, b, c) {\n          return c.split(\"|\").map(function (a) {\n            return b + a;\n          }).join(\"|\");\n        });\n      }).join(\"|\");a.split(\"|\").forEach(b);\n    }function e(a, b, c) {\n      var e = [];h[a].forEach(function (a, f) {\n        b && (a += \"+\" + a.slice(0, 3));d(a, function (a, b) {\n          e[b * c + f] = a.toLowerCase();\n        });\n      });h[a] = e;\n    }function g(a, b, c) {\n      a = \"\\\\d{\" + a + \",\" + b + \"}\";c && (a += \"|(?:\" + Ub(h.numbers) + \")+\");return a;\n    }function f(a, b) {\n      h[a] = h[a] || b;\n    }var h, l;h = new Tb(b);c(\"modifiers\");\"months weekdays units numbers articles tokens timeMarker ampm timeSuffixes dateParse timeParse\".split(\" \").forEach(c);l = !h.monthSuffix;e(\"months\", l, 12);e(\"weekdays\", l, 7);e(\"units\", !1, 8);e(\"numbers\", !1, 10);f(\"code\", a);f(\"date\", g(1, 2, h.digitDate));f(\"year\", \"'\\\\d{2}|\" + g(4, 4));f(\"num\", function () {\n      var a = [\"-?\\\\d+\"].concat(h.articles);h.numbers && (a = a.concat(h.numbers));return Ub(a);\n    }());(function () {\n      var a = [];h.i = {};h.modifiers.push({ name: \"day\", src: \"yesterday\", value: -1 });\n      h.modifiers.push({ name: \"day\", src: \"today\", value: 0 });h.modifiers.push({ name: \"day\", src: \"tomorrow\", value: 1 });h.modifiers.forEach(function (b) {\n        var c = b.name;d(b.src, function (d) {\n          var e = h[c];h.i[d] = b;a.push({ name: c, src: d, value: b.value });h[c] = e ? e + \"|\" + d : d;\n        });\n      });h.day += \"|\" + Ub(h.weekdays);h.modifiers = a;\n    })();h.monthSuffix && (h.month = g(1, 2), h.months = \"1 2 3 4 5 6 7 8 9 10 11 12\".split(\" \").map(function (a) {\n      return a + h.monthSuffix;\n    }));h.full_month = g(1, 2) + \"|\" + Ub(h.months);0 < h.timeSuffixes.length && h.addFormat(Vb(h), !1, Jb);\n    h.addFormat(\"{day}\", !0);h.addFormat(\"{month}\" + (h.monthSuffix || \"\"));h.addFormat(\"{year}\" + (h.yearSuffix || \"\"));h.timeParse.forEach(function (a) {\n      h.addFormat(a, !0);\n    });h.dateParse.forEach(function (a) {\n      h.addFormat(a);\n    });return Sb[a] = h;\n  }function Wb(a, b, c, d) {\n    a.g.unshift({ r: d, locale: a, q: q(\"^\" + b + \"$\", \"i\"), to: c });\n  }function Yb(a) {\n    return a.slice(0, 1).toUpperCase() + a.slice(1);\n  }function Ub(a) {\n    return a.filter(function (a) {\n      return !!a;\n    }).join(\"|\");\n  }function cc() {\n    var a = r.SugarNewDate;return a ? a() : new r();\n  }\n  function dc(a, b) {\n    var c;if (G(a[0])) return a;if (y(a[0]) && !y(a[1])) return [a[0]];if (z(a[0]) && b) return [ec(a[0]), a[1]];c = {};Nb.forEach(function (b, e) {\n      c[b.name] = a[e];\n    });return [c];\n  }function ec(a) {\n    var b,\n        c = {};if (a = a.match(/^(\\d+)?\\s?(\\w+?)s?$/i)) N(b) && (b = parseInt(a[1]) || 1), c[a[2].toLowerCase()] = b;return c;\n  }function fc(a, b, c) {\n    var d;N(c) && (c = Ob.length);for (b = b || 0; b < c && (d = Ob[b], !1 !== a(d.name, d, b)); b++) {}\n  }\n  function gc(a, b) {\n    var c = {},\n        d,\n        e;b.forEach(function (b, f) {\n      d = a[f + 1];N(d) || \"\" === d || (\"year\" === b && (c.t = d.replace(/'/, \"\")), e = parseFloat(d.replace(/'/, \"\").replace(/,/, \".\")), c[b] = isNaN(e) ? d.toLowerCase() : e);\n    });return c;\n  }function hc(a) {\n    a = a.trim().replace(/^just (?=now)|\\.+$/i, \"\");return ic(a);\n  }\n  function ic(a) {\n    return a.replace(Mb, function (a, c, d) {\n      var e = 0,\n          g = 1,\n          f,\n          h;if (c) return a;d.split(\"\").reverse().forEach(function (a) {\n        a = Lb[a];var b = 9 < a;b ? (f && (e += g), g *= a / (h || 1), h = a) : (!1 === f && (g *= 10), e += g * a);f = b;\n      });f && (e += g);return e;\n    });\n  }\n  function jc(a, b, c, d) {\n    function e(a) {\n      vb.push(a);\n    }function g() {\n      vb.forEach(function (a) {\n        a.call();\n      });\n    }function f() {\n      var a = n.getWeekday();n.setWeekday(7 * (k.num - 1) + (a > Ba ? Ba + 7 : Ba));\n    }function h() {\n      var a = B.i[k.edge];fc(function (a) {\n        if (M(k[a])) return E = a, !1;\n      }, 4);if (\"year\" === E) k.e = \"month\";else if (\"month\" === E || \"week\" === E) k.e = \"day\";n[(0 > a.value ? \"endOf\" : \"beginningOf\") + Yb(E)]();-2 === a.value && n.reset();\n    }function l() {\n      var a;fc(function (b, c, d) {\n        \"day\" === b && (b = \"date\");if (M(k[b])) {\n          if (d >= wb) return n.setTime(NaN), !1;a = a || {};a[b] = k[b];\n          delete k[b];\n        }\n      });a && e(function () {\n        n.set(a, !0);\n      });\n    }var n, x, ha, vb, B, k, E, wb, Ba, ra, ca;n = cc();vb = [];n.utc(d);C(a) ? n.utc(a.isUTC()).setTime(a.getTime()) : y(a) ? n.setTime(a) : G(a) ? (n.set(a, !0), k = a) : z(a) && (ha = Y(b), a = hc(a), ha && I(ha.o ? [ha.o].concat(ha.g) : ha.g, function (c, d) {\n      var g = a.match(d.q);if (g) {\n        B = d.locale;k = gc(g, d.to);B.o = d;k.utc && n.utc();if (k.timestamp) return k = k.timestamp, !1;d.r && !z(k.month) && (z(k.date) || Zb(ha, b)) && (ca = k.month, k.month = k.date, k.date = ca);k.year && 2 === k.t.length && (k.year = 100 * R(U(cc(), \"FullYear\") / 100) - 100 * R(k.year / 100) + k.year);k.month && (k.month = B.getMonth(k.month), k.shift && !k.unit && (k.unit = B.units[7]));k.weekday && k.date ? delete k.weekday : k.weekday && (k.weekday = B.getWeekday(k.weekday), k.shift && !k.unit && (k.unit = B.units[5]));k.day && (ca = B.i[k.day]) ? (k.day = ca.value, n.reset(), x = !0) : k.day && -1 < (Ba = B.getWeekday(k.day)) && (delete k.day, k.num && k.month ? (e(f), k.day = 1) : k.weekday = Ba);k.date && !y(k.date) && (k.date = $b(B, k.date));k.ampm && k.ampm === B.ampm[1] && 12 > k.hour ? k.hour += 12 : k.ampm === B.ampm[0] && 12 === k.hour && (k.hour = 0);if (\"offset_hours\" in k || \"offset_minutes\" in k) n.utc(), k.offset_minutes = k.offset_minutes || 0, k.offset_minutes += 60 * k.offset_hours, \"-\" === k.offset_sign && (k.offset_minutes *= -1), k.minute -= k.offset_minutes;k.unit && (x = !0, ra = ac(B, k.num), wb = B.units.indexOf(k.unit) % 8, E = W.units[wb], l(), k.shift && (ra *= (ca = B.i[k.shift]) ? ca.value : 0), k.sign && (ca = B.i[k.sign]) && (ra *= ca.value), M(k.weekday) && (n.set({ weekday: k.weekday }, !0), delete k.weekday), k[E] = (k[E] || 0) + ra);k.edge && e(h);\"-\" === k.year_sign && (k.year *= -1);fc(function (a, b, c) {\n          b = k[a];var d = b % 1;d && (k[Ob[c - 1].name] = R(d * (\"second\" === a ? 1E3 : 60)), k[a] = Q(b));\n        }, 1, 4);return !1;\n      }\n    }), k ? x ? n.advance(k) : (n._utc && n.reset(), kc(n, k, !0, !1, c)) : (\"now\" !== a && (n = new r(a)), d && n.addMinutes(-n.getTimezoneOffset())), g(), n.utc(!1));return { c: n, set: k };\n  }function lc(a) {\n    var b,\n        c = P(a),\n        d = c,\n        e = 0;fc(function (a, f, h) {\n      b = Q(Da(c / f.b(), 1));1 <= b && (d = b, e = h);\n    }, 1);return [d, e, a];\n  }\n  function mc(a) {\n    var b = lc(a.millisecondsFromNow());if (6 === b[1] || 5 === b[1] && 4 === b[0] && a.daysFromNow() >= cc().daysInMonth()) b[0] = P(a.monthsFromNow()), b[1] = 6;return b;\n  }function nc(a, b, c) {\n    function d(a, c) {\n      var d = U(a, \"Month\");return Y(c).months[d + 12 * b];\n    }Z(a, d, c);Z(Yb(a), d, c, 1);\n  }function Z(a, b, c, d) {\n    X[a] = function (a, g) {\n      var f = b(a, g);c && (f = f.slice(0, c));d && (f = f.slice(0, d).toUpperCase() + f.slice(d));return f;\n    };\n  }\n  function oc(a, b, c) {\n    X[a] = b;X[a + a] = function (a, c) {\n      return T(b(a, c), 2);\n    };c && (X[a + a + a] = function (a, c) {\n      return T(b(a, c), 3);\n    }, X[a + a + a + a] = function (a, c) {\n      return T(b(a, c), 4);\n    });\n  }function pc(a) {\n    var b = a.match(/(\\{\\w+\\})|[^{}]+/g);Qb[a] = b.map(function (a) {\n      a.replace(/\\{(\\w+)\\}/, function (b, e) {\n        a = X[e] || e;return e;\n      });return a;\n    });\n  }\n  function qc(a, b, c, d) {\n    var e;if (!a.isValid()) return \"Invalid Date\";Date[b] ? b = Date[b] : F(b) && (e = mc(a), b = b.apply(a, e.concat(Y(d))));if (!b && c) return e = e || mc(a), 0 === e[1] && (e[1] = 1, e[0] = 1), a = Y(d), Xb(a, e, 0 < e[2] ? \"future\" : \"past\");b = b || \"long\";if (\"short\" === b || \"long\" === b || \"full\" === b) b = Y(d)[b];Qb[b] || pc(b);var g, f;e = \"\";b = Qb[b];g = 0;for (c = b.length; g < c; g++) {\n      f = b[g], e += F(f) ? f(a, d) : f;\n    }return e;\n  }\n  function rc(a, b, c, d, e) {\n    var g,\n        f,\n        h,\n        l = 0,\n        n = 0,\n        x = 0;g = jc(b, c, null, e);0 < d && (n = x = d, f = !0);if (!g.c.isValid()) return !1;if (g.set && g.set.e) {\n      Rb.forEach(function (b) {\n        b.name === g.set.e && (l = b.b(g.c, a - g.c) - 1);\n      });b = Yb(g.set.e);if (g.set.edge || g.set.shift) g.c[\"beginningOf\" + b]();\"month\" === g.set.e && (h = g.c.clone()[\"endOf\" + b]().getTime());!f && g.set.sign && \"millisecond\" != g.set.e && (n = 50, x = -50);\n    }f = a.getTime();b = g.c.getTime();h = sc(a, b, h || b + l);return f >= b - n && f <= h + x;\n  }\n  function sc(a, b, c) {\n    b = new r(b);a = new r(c).utc(a.isUTC());23 !== U(a, \"Hours\") && (b = b.getTimezoneOffset(), a = a.getTimezoneOffset(), b !== a && (c += (a - b).minutes()));return c;\n  }\n  function kc(a, b, c, d, e) {\n    function g(a) {\n      return M(b[a]) ? b[a] : b[a + \"s\"];\n    }function f(a) {\n      return M(g(a));\n    }var h;if (y(b) && d) b = { milliseconds: b };else if (y(b)) return a.setTime(b), a;M(b.date) && (b.day = b.date);fc(function (d, e, g) {\n      var l = \"day\" === d;if (f(d) || l && f(\"weekday\")) return b.e = d, h = +g, !1;!c || \"week\" === d || l && f(\"week\") || Sa(a, e.method, l ? 1 : 0);\n    });Rb.forEach(function (c) {\n      var e = c.name;c = c.method;var h;h = g(e);N(h) || (d ? (\"week\" === e && (h = (b.day || 0) + 7 * h, c = \"Date\"), h = h * d + U(a, c)) : \"month\" === e && f(\"day\") && Sa(a, \"Date\", 15), Sa(a, c, h), d && \"month\" === e && (e = h, 0 > e && (e = e % 12 + 12), e % 12 != U(a, \"Month\") && Sa(a, \"Date\", 0)));\n    });d || f(\"day\") || !f(\"weekday\") || a.setWeekday(g(\"weekday\"));var l;a: {\n      switch (e) {case -1:\n          l = a > cc();break a;case 1:\n          l = a < cc();break a;}l = void 0;\n    }l && fc(function (b, c) {\n      if ((c.k || \"week\" === b && f(\"weekday\")) && !(f(b) || \"day\" === b && f(\"weekday\"))) return a[c.j](e), !1;\n    }, h + 1);return a;\n  }\n  function Vb(a, b) {\n    var c = Kb,\n        d = { h: 0, m: 1, s: 2 },\n        e;a = a || W;return c.replace(/{([a-z])}/g, function (c, f) {\n      var h = [],\n          l = \"h\" === f,\n          n = l && !b;if (\"t\" === f) return a.ampm.join(\"|\");l && h.push(\":\");(e = a.timeSuffixes[d[f]]) && h.push(e + \"\\\\s*\");return 0 === h.length ? \"\" : \"(?:\" + h.join(\"|\") + \")\" + (n ? \"\" : \"?\");\n    });\n  }function tc(a, b, c) {\n    var d, e;y(a[1]) ? d = dc(a)[0] : (d = a[0], e = a[1]);return jc(d, e, b, c).c;\n  }\n  H(r, !1, !0, { create: function create() {\n      return tc(arguments);\n    }, past: function past() {\n      return tc(arguments, -1);\n    }, future: function future() {\n      return tc(arguments, 1);\n    }, addLocale: function addLocale(a, b) {\n      return bc(a, b);\n    }, setLocale: function setLocale(a) {\n      var b = Y(a, !1);Ib = b;a && a != b.code && (b.code = a);return b;\n    }, getLocale: function getLocale(a) {\n      return a ? Y(a, !1) : Ib;\n    }, addFormat: function addFormat(a, b, c) {\n      Wb(Y(c), a, b);\n    } });\n  H(r, !0, !0, { set: function set() {\n      var a = dc(arguments);return kc(this, a[0], a[1]);\n    }, setWeekday: function setWeekday(a) {\n      if (!N(a)) return Sa(this, \"Date\", U(this, \"Date\") + a - U(this, \"Day\"));\n    }, setISOWeek: function setISOWeek(a) {\n      var b = U(this, \"Day\") || 7;if (!N(a)) return this.set({ month: 0, date: 4 }), this.set({ weekday: 1 }), 1 < a && this.addWeeks(a - 1), 1 !== b && this.advance({ days: b - 1 }), this.getTime();\n    }, getISOWeek: function getISOWeek() {\n      var a;a = this.clone();var b = U(a, \"Day\") || 7;a.addDays(4 - b).reset();return 1 + Q(a.daysSince(a.clone().beginningOfYear()) / 7);\n    }, beginningOfISOWeek: function beginningOfISOWeek() {\n      var a = this.getDay();0 === a ? a = -6 : 1 !== a && (a = 1);this.setWeekday(a);return this.reset();\n    }, endOfISOWeek: function endOfISOWeek() {\n      0 !== this.getDay() && this.setWeekday(7);return this.endOfDay();\n    }, getUTCOffset: function getUTCOffset(a) {\n      var b = this._utc ? 0 : this.getTimezoneOffset(),\n          c = !0 === a ? \":\" : \"\";return !b && a ? \"Z\" : T(Q(-b / 60), 2, !0) + c + T(P(b % 60), 2);\n    }, utc: function utc(a) {\n      oa(this, \"_utc\", !0 === a || 0 === arguments.length);return this;\n    }, isUTC: function isUTC() {\n      return !!this._utc || 0 === this.getTimezoneOffset();\n    }, advance: function advance() {\n      var a = dc(arguments, !0);return kc(this, a[0], a[1], 1);\n    }, rewind: function rewind() {\n      var a = dc(arguments, !0);return kc(this, a[0], a[1], -1);\n    }, isValid: function isValid() {\n      return !isNaN(this.getTime());\n    }, isAfter: function isAfter(a, b) {\n      return this.getTime() > r.create(a).getTime() - (b || 0);\n    }, isBefore: function isBefore(a, b) {\n      return this.getTime() < r.create(a).getTime() + (b || 0);\n    }, isBetween: function isBetween(a, b, c) {\n      var d = this.getTime();a = r.create(a).getTime();var e = r.create(b).getTime();b = Ca(a, e);a = S(a, e);c = c || 0;return b - c < d && a + c > d;\n    }, isLeapYear: function isLeapYear() {\n      var a = U(this, \"FullYear\");return 0 === a % 4 && 0 !== a % 100 || 0 === a % 400;\n    },\n    daysInMonth: function daysInMonth() {\n      return 32 - U(new r(U(this, \"FullYear\"), U(this, \"Month\"), 32), \"Date\");\n    }, format: function format(a, b) {\n      return qc(this, a, !1, b);\n    }, relative: function relative(a, b) {\n      z(a) && (b = a, a = null);return qc(this, a, !0, b);\n    }, is: function is(a, b, c) {\n      var d, e;if (this.isValid()) {\n        if (z(a)) switch (a = a.trim().toLowerCase(), e = this.clone().utc(c), !0) {case \"future\" === a:\n            return this.getTime() > cc().getTime();case \"past\" === a:\n            return this.getTime() < cc().getTime();case \"weekday\" === a:\n            return 0 < U(e, \"Day\") && 6 > U(e, \"Day\");case \"weekend\" === a:\n            return 0 === U(e, \"Day\") || 6 === U(e, \"Day\");case -1 < (d = W.weekdays.indexOf(a) % 7):\n            return U(e, \"Day\") === d;case -1 < (d = W.months.indexOf(a) % 12):\n            return U(e, \"Month\") === d;}return rc(this, a, null, b, c);\n      }\n    }, reset: function reset(a) {\n      var b = {},\n          c;a = a || \"hours\";\"date\" === a && (a = \"days\");c = Rb.some(function (b) {\n        return a === b.name || a === b.name + \"s\";\n      });b[a] = a.match(/^days?/) ? 1 : 0;return c ? this.set(b, !0) : this;\n    }, clone: function clone() {\n      var a = new r(this.getTime());a.utc(!!this._utc);return a;\n    } });\n  H(r, !0, !0, { iso: function iso() {\n      return this.toISOString();\n    }, getWeekday: r.prototype.getDay, getUTCWeekday: r.prototype.getUTCDay });function uc(a, b) {\n    function c() {\n      return R(this * b);\n    }function d() {\n      return tc(arguments)[a.j](this);\n    }function e() {\n      return tc(arguments)[a.j](-this);\n    }var g = a.name,\n        f = {};f[g] = c;f[g + \"s\"] = c;f[g + \"Before\"] = e;f[g + \"sBefore\"] = e;f[g + \"Ago\"] = e;f[g + \"sAgo\"] = e;f[g + \"After\"] = d;f[g + \"sAfter\"] = d;f[g + \"FromNow\"] = d;f[g + \"sFromNow\"] = d;t.extend(f);\n  }H(t, !0, !0, { duration: function duration(a) {\n      a = Y(a);return Xb(a, lc(this), \"duration\");\n    } });\n  W = Ib = r.addLocale(\"en\", { plural: !0, timeMarker: \"at\", ampm: \"am,pm\", months: \"January,February,March,April,May,June,July,August,September,October,November,December\", weekdays: \"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\", units: \"millisecond:|s,second:|s,minute:|s,hour:|s,day:|s,week:|s,month:|s,year:|s\", numbers: \"one,two,three,four,five,six,seven,eight,nine,ten\", articles: \"a,an,the\", tokens: \"the,st|nd|rd|th,of\", \"short\": \"{Month} {d}, {yyyy}\", \"long\": \"{Month} {d}, {yyyy} {h}:{mm}{tt}\", full: \"{Weekday} {Month} {d}, {yyyy} {h}:{mm}:{ss}{tt}\",\n    past: \"{num} {unit} {sign}\", future: \"{num} {unit} {sign}\", duration: \"{num} {unit}\", modifiers: [{ name: \"sign\", src: \"ago|before\", value: -1 }, { name: \"sign\", src: \"from now|after|from|in|later\", value: 1 }, { name: \"edge\", src: \"last day\", value: -2 }, { name: \"edge\", src: \"end\", value: -1 }, { name: \"edge\", src: \"first day|beginning\", value: 1 }, { name: \"shift\", src: \"last\", value: -1 }, { name: \"shift\", src: \"the|this\", value: 0 }, { name: \"shift\", src: \"next\", value: 1 }], dateParse: [\"{month} {year}\", \"{shift} {unit=5-7}\", \"{0?} {date}{1}\", \"{0?} {edge} of {shift?} {unit=4-7?}{month?}{year?}\"],\n    timeParse: \"{num} {unit} {sign};{sign} {num} {unit};{0} {num}{1} {day} of {month} {year?};{weekday?} {month} {date}{1?} {year?};{date} {month} {year};{date} {month};{shift} {weekday};{shift} week {weekday};{weekday} {2?} {shift} week;{num} {unit=4-5} {sign} {day};{0?} {date}{1} of {month};{0?}{month?} {date?}{1?} of {shift} {unit=6-7}\".split(\";\") });Ob = Rb.concat().reverse();Nb = Rb.concat();Nb.splice(2, 1);\n  K(r, !0, !0, Rb, function (a, b, c) {\n    function d(a) {\n      a /= f;var c = a % 1,\n          d = b.error || 0.999;c && P(c % 1) > d && (a = R(a));return 0 > a ? Aa(a) : Q(a);\n    }var e = b.name,\n        g = Yb(e),\n        f = b.b(),\n        h,\n        l;b.j = \"add\" + g + \"s\";h = function h(a, b) {\n      return d(this.getTime() - r.create(a, b).getTime());\n    };l = function l(a, b) {\n      return d(r.create(a, b).getTime() - this.getTime());\n    };a[e + \"sAgo\"] = l;a[e + \"sUntil\"] = l;a[e + \"sSince\"] = h;a[e + \"sFromNow\"] = h;a[b.j] = function (a, b) {\n      var c = {};c[e] = a;return this.advance(c, b);\n    };uc(b, f);3 > c && [\"Last\", \"This\", \"Next\"].forEach(function (b) {\n      a[\"is\" + b + g] = function () {\n        return rc(this, b + \" \" + e, \"en\");\n      };\n    });4 > c && (a[\"beginningOf\" + g] = function () {\n      var a = {};switch (e) {case \"year\":\n          a.year = U(this, \"FullYear\");break;case \"month\":\n          a.month = U(this, \"Month\");break;case \"day\":\n          a.day = U(this, \"Date\");break;case \"week\":\n          a.weekday = 0;}return this.set(a, !0);\n    }, a[\"endOf\" + g] = function () {\n      var a = { hours: 23, minutes: 59, seconds: 59, milliseconds: 999 };switch (e) {case \"year\":\n          a.month = 11;a.day = 31;break;case \"month\":\n          a.day = this.daysInMonth();break;case \"week\":\n          a.weekday = 6;}return this.set(a, !0);\n    });\n  });\n  W.addFormat(\"([+-])?(\\\\d{4,4})[-.]?{full_month}[-.]?(\\\\d{1,2})?\", !0, [\"year_sign\", \"year\", \"month\", \"date\"], !1, !0);W.addFormat(\"(\\\\d{1,2})[-.\\\\/]{full_month}(?:[-.\\\\/](\\\\d{2,4}))?\", !0, [\"date\", \"month\", \"year\"], !0);W.addFormat(\"{full_month}[-.](\\\\d{4,4})\", !1, [\"month\", \"year\"]);W.addFormat(\"\\\\/Date\\\\((\\\\d+(?:[+-]\\\\d{4,4})?)\\\\)\\\\/\", !1, [\"timestamp\"]);W.addFormat(Vb(W), !1, Jb);Pb = W.g.slice(0, 7).reverse();W.g = W.g.slice(7).concat(Pb);oc(\"f\", function (a) {\n    return U(a, \"Milliseconds\");\n  }, !0);\n  oc(\"s\", function (a) {\n    return U(a, \"Seconds\");\n  });oc(\"m\", function (a) {\n    return U(a, \"Minutes\");\n  });oc(\"h\", function (a) {\n    return U(a, \"Hours\") % 12 || 12;\n  });oc(\"H\", function (a) {\n    return U(a, \"Hours\");\n  });oc(\"d\", function (a) {\n    return U(a, \"Date\");\n  });oc(\"M\", function (a) {\n    return U(a, \"Month\") + 1;\n  });(function () {\n    function a(a, c) {\n      var d = U(a, \"Hours\");return Y(c).ampm[Q(d / 12)] || \"\";\n    }Z(\"t\", a, 1);Z(\"tt\", a);Z(\"T\", a, 1, 1);Z(\"TT\", a, null, 2);\n  })();\n  /* istanbul ignore next */\n  (function () {\n    function a(a, c) {\n      var d = U(a, \"Day\");return Y(c).weekdays[d];\n    }Z(\"dow\", a, 3);Z(\"Dow\", a, 3, 1);Z(\"weekday\", a);Z(\"Weekday\", a, null, 1);\n  })();nc(\"mon\", 0, 3);nc(\"month\", 0);nc(\"month2\", 1);nc(\"month3\", 2);X.ms = X.f;X.milliseconds = X.f;X.seconds = X.s;X.minutes = X.m;X.hours = X.h;X[\"24hr\"] = X.H;X[\"12hr\"] = X.h;X.date = X.d;X.day = X.d;X.year = X.yyyy;K(r, !0, !0, \"short,long,full\", function (a, b) {\n    a[b] = function (a) {\n      return qc(this, b, !1, a);\n    };\n  });\n  \"〇一二三四五六七八九十百千万\".split(\"\").forEach(function (a, b) {\n    9 < b && (b = za(10, b - 9));Lb[a] = b;\n  });xa(Lb, Ka);Mb = q(\"([期週周])?([〇一二三四五六七八九十百千万\" + Ja + \"]+)(?!昨)\", \"g\");\n  /* istanbul ignore next */\n  (function () {\n    var a = W.weekdays.slice(0, 7),\n        b = W.months.slice(0, 12);K(r, !0, !0, \"today yesterday tomorrow weekday weekend future past\".split(\" \").concat(a).concat(b), function (a, b) {\n      a[\"is\" + Yb(b)] = function (a) {\n        return this.is(b, 0, a);\n      };\n    });\n  })();r.utc || (r.utc = { create: function create() {\n      return tc(arguments, 0, !0);\n    }, past: function past() {\n      return tc(arguments, -1, !0);\n    }, future: function future() {\n      return tc(arguments, 1, !0);\n    } });\n  H(r, !1, !0, { RFC1123: \"{Dow}, {dd} {Mon} {yyyy} {HH}:{mm}:{ss} {tz}\", RFC1036: \"{Weekday}, {dd}-{Mon}-{yy} {HH}:{mm}:{ss} {tz}\", ISO8601_DATE: \"{yyyy}-{MM}-{dd}\", ISO8601_DATETIME: \"{yyyy}-{MM}-{dd}T{HH}:{mm}:{ss}.{fff}{isotz}\" });\n})();","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/touch.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: touch [OPTION]... FILE...\\nUpdate the access and modification times of each FILE to the current time.\\n\\nA FILE argument that does not exist is created empty, unless -c is\\nsupplied.\\n\\n  -a                      change only the access time\\n  -c, --no-create         do not create any files\\n  -d, --date <STRING>     parse STRING and use it instead of current time\\n  -m                      change only the modification time\\n  -r, --reference <FILE>  use this file's times instead of current time\\n      --time <WORD>       change the specified time:\\n                            WORD is access, atime, or use: equivalent to -a\\n                            WORD is modify or mtime: equivalent to -m\\n      --help              display this help and exit\\n\\nReport touch bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/true.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\n\nvar _true = {\n  exec: function exec() {\n    // Always return 0\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return _true;\n  }\n  vorpal.api.true = _true;\n  vorpal.command('true').action(function (args, callback) {\n    return interfacer.call(this, {\n      command: _true,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/true.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: true [OPTION]\\nDo nothing, successfully\\n\\nThis command simply exits with status 0 (success).\\n\\n      --help   display this help and exit\\n\\nReport true bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/rm.js":"'use strict';\n\nvar fs = require('fs');\nvar fsAutocomplete = require('vorpal-autocomplete-fs');\n\nvar expand = require('./../util/expand');\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\nvar unlinkSync = require('./../util/unlinkSync');\n\nvar rm = {\n  exec: function exec(args, options) {\n    var self = this;\n    options = options || {};\n    options.recursive = options.R ? options.R : options.recursive;\n\n    var files = args;\n    files = files === undefined ? [] : files;\n    files = typeof files === 'string' ? [files] : files;\n\n    files = expand(files);\n\n    files.forEach(function (file) {\n      if (!fs.existsSync(file)) {\n        // Path does not exist, no force flag given\n        if (!options.force) {\n          self.log('rm: cannot remove ' + file + ': No such file or directory');\n          return 2;\n        }\n        /* istanbul ignore next */\n        return 0;\n      }\n\n      var stats = fs.lstatSync(file);\n      if (stats.isFile() || stats.isSymbolicLink()) {\n        if (options.force) {\n          unlinkSync(file);\n          return 0;\n        }\n\n        if (isWriteable(file)) {\n          unlinkSync(file);\n        } else {\n          /* istanbul ignore next */\n          self.log('rm: cannot remove ' + file + ': permission denied');\n          /* istanbul ignore next */\n          return 2;\n        }\n        return 0;\n      }\n\n      // Path is an existing directory, but no -r flag given\n      if (stats.isDirectory() && !options.recursive) {\n        self.log('rm: cannot remove: path is a directory');\n        return 2;\n      }\n\n      // Recursively remove existing directory\n      if (stats.isDirectory() && options.recursive) {\n        rmdirSyncRecursive.call(self, file, options.force, options.dir);\n      }\n    });\n  }\n};\n\nfunction rmdirSyncRecursive(dir, force, removeEmptyDir) {\n  var self = this;\n  var files = undefined;\n  files = fs.readdirSync(dir);\n\n  // Loop through and delete everything in the sub-tree after checking it\n  for (var i = 0; i < files.length; i++) {\n    var file = dir + '/' + files[i];\n    var currFile = fs.lstatSync(file);\n\n    if (currFile.isDirectory()) {\n      // Recursive function back to the beginning\n      rmdirSyncRecursive(file, force, removeEmptyDir);\n    } else if (currFile.isSymbolicLink()) {\n      // Unlink symlinks\n      /* istanbul ignore next */\n      if (force || isWriteable(file)) {\n        try {\n          unlinkSync(file);\n        } catch (e) {\n          self.log('rm: cannot remove ' + file + ': code ' + e.code);\n          return 2;\n        }\n      }\n    } else if (force || isWriteable(file)) {\n      // Assume it's a file.\n      try {\n        unlinkSync(file);\n      } catch (e) {\n        /* istanbul ignore next */\n        self.log('rm: cannot remove ' + file + ': code ' + e.code);\n        /* istanbul ignore next */\n        return 2;\n      }\n    }\n  }\n\n  // Now that we know everything in the sub-tree has been deleted,\n  // we can delete the main directory.\n  var result = undefined;\n  try {\n    // Retry on windows, sometimes it takes a little time before all the files in the directory are gone\n    var start = Date.now();\n    while (true) {\n      try {\n        result = fs.rmdirSync(dir);\n        /* istanbul ignore next */\n        if (fs.existsSync(dir)) {\n          throw new Error('EAGAIN');\n        }\n        break;\n      } catch (er) {\n        // In addition to error codes, also check if the directory still exists and loop again if true\n        /* istanbul ignore next */\n        if (process.platform === 'win32' && (er.code === 'ENOTEMPTY' || er.code === 'EBUSY' || er.code === 'EPERM' || er.code === 'EAGAIN')) {\n          if (Date.now() - start > 1000) {\n            throw er;\n          }\n          /* istanbul ignore next */\n        } else if (er.code === 'ENOENT') {\n            // Directory did not exist, deletion was successful\n            break;\n            /* istanbul ignore next */\n          } else {\n              throw er;\n            }\n      }\n    }\n  } catch (e) {\n    /* istanbul ignore next */\n    self.log('rm: cannot remove directory ' + dir + ': code ' + e.code);\n    /* istanbul ignore next */\n    return 2;\n  }\n  return result;\n}\n\n// Hack to determine if file has write permissions for current user\n// Avoids having to check user, group, etc, but it's probably slow.\nfunction isWriteable(file) {\n  var writePermission = true;\n  try {\n    var __fd = fs.openSync(file, 'a');\n    fs.closeSync(__fd);\n  } catch (e) {\n    /* istanbul ignore next */\n    writePermission = false;\n  }\n\n  return writePermission;\n}\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return rm;\n  }\n  vorpal.api.rm = rm;\n  vorpal.command('rm [files...]').parse(preparser).option('-f, --force', 'ignore nonexistent files and arguments, never prompt').option('-r, --recursive', 'remove directories and their contents recursively').option('-R', 'remove directories and their contents recursively').autocomplete(fsAutocomplete()).action(function (args, callback) {\n    args.options = args.options || {};\n    return interfacer.call(this, {\n      command: rm,\n      args: args.files,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/util/unlinkSync.js":"'use strict';\n\nvar fs = require('fs');\n\n/**\n * Normalizes _unlinkSync() across\n * platforms to match Unix behavior, i.e.\n * file can be unlinked even its it's\n * read only.\n * See https://github.com/joyent/node/issues/3006\n *\n * @param {String} file\n * @api public\n */\n\nmodule.exports = function (file) {\n  try {\n    fs.unlinkSync(file);\n  } catch (e) {\n    // Try to override file permission\n    /* istanbul ignore if */\n    if (e.code === 'EPERM') {\n      fs.chmodSync(file, '0666');\n      fs.unlinkSync(file);\n    } else {\n      /* istanbul ignore next */\n      throw e;\n    }\n  }\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/rm.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: rm [OPTION]... FILE...\\nRemove (unlink) the FILE(s).\\n\\n  -f, --force           ignore nonexistent files and arguments, never prompt\\n  -r, -R, --recursive   remove directories and their contents recursively\\n      --help            display this help and exit\\n\\nBy default, rm does not remove directories.  Use the --recursive (-r or -R)\\noption to remove each listed directory, too, along with all of its contents.\\n\\nTo remove a file whose name starts with a '-', for example '-foo',\\nuse one of these commands:\\n  rm -- -foo\\n  rm ./-foo\\n\\nNote that if you use rm to remove a file, it might be possible to recover\\nsome of its contents, given sufficient expertise and/or time.\\n\\nReport rm bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/commands/unalias.js":"'use strict';\n\nvar interfacer = require('./../util/interfacer');\nvar preparser = require('./../preparser');\n\nvar unalias = {\n  exec: function exec(args, options) {\n    var _this = this;\n\n    args = args;\n    options = options || {};\n    var vorpal = options.vorpal;\n\n    if (!vorpal) {\n      /* istanbul ignore next */\n      throw new Error('Unalias is not programatically supported.');\n    }\n\n    vorpal._aliases = vorpal._aliases || [];\n\n    if (typeof args === 'string' || args instanceof String) {\n      args = String(args).split(' ');\n      args = args.filter(function (str) {\n        return String(str).trim() !== '';\n      });\n    }\n\n    // Validate no input with help.\n    if ((args === undefined || args.length < 1 || args === '') && !options.a) {\n      this.log('unalias: usage: unalias [-a] name [name ...]');\n      return 1;\n    }\n\n    // Pull list of aliases\n    var all = undefined;\n    try {\n      all = JSON.parse(vorpal.localStorage.getItem('aliases') || []);\n    } catch (e) {\n      /* istanbul ignore next */\n      all = [];\n      /* istanbul ignore next */\n      vorpal.localStorage.removeItem('aliases');\n    }\n\n    if (options.a) {\n      args = all;\n    }\n\n    // Remove each alias in the list.\n\n    var _loop = function _loop(i) {\n      var key = args[i];\n      var item = vorpal.localStorage.getItem('alias|' + key);\n      if (item !== undefined && item !== null) {\n        vorpal.localStorage.removeItem('alias|' + key);\n      } else {\n        _this.log('-cash: unalias: ' + key + ': not found');\n      }\n      all = all.filter(function (str) {\n        return !(str === key);\n      });\n    };\n\n    for (var i = 0; i < args.length; ++i) {\n      _loop(i);\n    }\n\n    // Rebuild alias lists.\n    var aliases = {};\n    /* istanbul ignore next */\n    for (var i = 0; i < all.length; ++i) {\n      var item = vorpal.localStorage.getItem('alias|' + all[i]);\n      if (item !== undefined && item !== null) {\n        aliases[all[i]] = item;\n      }\n    }\n    vorpal._aliases = aliases;\n\n    vorpal.localStorage.setItem('aliases', JSON.stringify(all));\n    return 0;\n  }\n};\n\nmodule.exports = function (vorpal) {\n  if (vorpal === undefined) {\n    return unalias;\n  }\n  vorpal.api.unalias = unalias;\n  vorpal.command('unalias [name...]').parse(preparser).option('-a', 'remove all alias definitions').action(function (args, callback) {\n    args.options = args.options || {};\n    args.options.vorpal = vorpal;\n    return interfacer.call(this, {\n      command: unalias,\n      args: args.name,\n      options: args.options,\n      callback: callback\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/help/unalias.js":"\"use strict\";\n\nmodule.exports = \"\\nUsage: unalias [OPTION] name ...\\nRemove each name from the list of defined aliases.\\n\\n  -a           remove all alias definitions\\n      --help   display this help and exit\\n\\nExit status:\\n  0   if OK,\\n  1   if a name is not an existing alias.\\n\\nReport unalias bugs to <https://github.com/dthree/cash>\\nCash home page: <http://cash.js.org/>\\n\";","/home/travis/build/npmtest/node-npmtest-cash/node_modules/cash/dist/windows.js":"'use strict';\n\nvar os = require('os');\nvar windows = os.platform() === 'win32';\n\nvar exclusions = require('./../commands.json').windowsExclusions;\n\nmodule.exports = {\n  registerCommands: function registerCommands(self) {\n    self.vorpal.catch('[words...]', 'Catches content').parse(function (input) {\n      // Look for aliases and translate them.\n      // Makes cash.alias and cash.unalias work.\n      var parts = String(input).split(' ');\n      var first = parts.shift();\n      var out = input;\n      var translation = self.vorpal._aliases[first];\n      if (self.vorpal._aliases && translation) {\n        /* istanbul ignore next */\n        out = translation + ' ' + parts.join(' ');\n      }\n      return out;\n    }).autocomplete(function () {\n      /* istanbul ignore next */\n      return self.vorpal.commands.map(function (c) {\n        return c._name;\n      });\n    }).action(function (args, cb) {\n      cb = cb || function () {};\n      var spawn = require('child_process').spawn;\n      var slf = this;\n\n      var words = args.words.join(' ');\n      var argus = undefined;\n\n      var cmd = undefined;\n      // Only register commands if on Windows.\n      /* istanbul ignore next */\n      if (windows) {\n        var excluded = false;\n        for (var i = 0; i < exclusions.length; ++i) {\n          if (String(words.slice(0, exclusions[i].length)).toLowerCase() === exclusions[i].toLowerCase()) {\n            excluded = true;\n            cmd = undefined;\n            argus = undefined;\n          }\n        }\n\n        if (!excluded) {\n          var parts = words.split(' ');\n          cmd = parts.shift();\n          argus = parts;\n          argus = argus.length === 1 && argus[0] === '' ? [] : argus;\n        }\n      }\n\n      // Accommodate tests for Linux.\n      if (words === 'cash-test') {\n        cmd = 'echo';\n        argus = ['hi'];\n      }\n\n      if (cmd === undefined || argus === undefined) {\n        slf.help();\n        cb();\n        return;\n      }\n\n      argus.unshift(cmd);\n      argus.unshift('/C');\n      var proc = undefined;\n      var out = '';\n      try {\n        proc = spawn('cmd', argus);\n      } catch (e) {\n        /* istanbul ignore next */\n        slf.log(e);\n      }\n\n      var closed = false;\n\n      // Properly print stdout as it's fed,\n      // waiting for line breaks before sending\n      // it to Vorpal.\n      function print() {\n        var parts = String(out).split('\\n');\n        /* istanbul ignore next */\n        if (parts.length > 1) {\n          out = parts.pop();\n          var logging = String(parts.join('\\n')).replace(/\\r\\r/g, '\\r');\n          slf.log(logging);\n        }\n        /* istanbul ignore next */\n        if (closed === false) {\n          setTimeout(function () {\n            print();\n          }, 50);\n        }\n      }\n      print();\n\n      // See if we get a Windows help on an\n      // invalid command and instead throw\n      // Cash help.\n      var windowsHelpFlag = false;\n      var windowsCommandReject = 'is not recognized as an internal or external command';\n\n      /* istanbul ignore next */\n      proc.stdout.on('data', function (data) {\n        out += data.toString('utf8');\n      });\n\n      /* istanbul ignore next */\n      proc.stderr.on('data', function (data) {\n        var str = data.toString('utf8');\n        if (windows && str.indexOf(windowsCommandReject) > -1) {\n          windowsHelpFlag = true;\n          return;\n        }\n        out += str;\n      });\n\n      proc.on('close', function () {\n        closed = true;\n        if (String(out).trim() !== '') {\n          slf.log(String(out).replace(/\\r\\r/g, '\\r'));\n          out = '';\n        }\n        if (windowsHelpFlag) {\n          slf.help();\n        }\n        /* istanbul ignore next */\n        setTimeout(function () {\n          cb();\n        }, 150);\n      });\n\n      proc.on('error', function (data) {\n        out += data.toString('utf8');\n      });\n    });\n  }\n};"}